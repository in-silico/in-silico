class bueno 
{
	int i;
	bueno c;
	void prueba(int a, int b)
	{
		string s;
		bueno[] arreglo;
		bueno bu;
		bueno2 bu2;
		s = s + "fddfs" + s;
		if(s == s)
		{
			s = s + "da";
		}
		arreglo = null;
		bu = null;
		arreglo = new bueno[a + b];
		arreglo[a + b - 1] = new bueno();
		b = arreglo.length;
		bu = new bueno2();
		a = this.i % bu2.j * bu2.i / a;
		bu2.prueba3(bu2.j + a, bu.i);
		if(true)
		{
			int s;
			bueno bu2;
			bueno2 bu;
			while(true)
			{
				bueno2 s;
				bueno2 bu2;
				s.j = 2 + bu2.j;
				if(true)
				{
					if(true)
					{
						if(true)
						{
						}
						else
						{
						}
					}
					
				}
				else
				{
				}
				continue;
			}
			a = this.i % bu.j * bu2.i / a + s;
			return;
		}
		bu = prueba2(bu2, bu2);
		prueba2(bu2, bu2);
	}

	bueno prueba2(bueno a, bueno b)
	{
		while(true)
		{
			if(i == 1)
			{
				return new bueno();
			}
			else
			{
				return a;
			}
		}
	}

	bueno[] expresiones(bueno d)
	{
		bueno a;
		bueno b;
		bueno[] e;
		string str;
		string st = "sddsa" + "adsasda" + "22";
		int integer = i + 332432 + 321 - 342 % 23 / 3;
		boolean bool;
		boolean bool2;
		boolean r1;
		boolean r2;
		int r3 = 22;
		string r4 = "ewaw";
		int r51;
		int r52;
		int r53;
		int r54;
		int r55;
		string r6;
		bool2 = true && bool || false && bool;
		r1 = true;
		r2 = false;
		r51 = r3 + i;
		r52 = r3 - r51;
		r53 = r52 / 3;
		r54 = r53 * r53;
		r55 = r54 % r54;
		r6 = r4 + r4;
		{
			boolean r71 = b == c;	
			boolean r72 = c != b;	
			int r8 = -i;
			bueno r9 = e[22];
			boolean r10 = !(r1 || r2);
			int r11 = e.length;
			bueno[] r12 = new bueno[i];	
			bueno r13 = new bueno2();
			bueno[] r14 = expresiones(a);
			bueno r15 = expresiones(a)[2];
			bueno r16 = b.c;
		}
		a = b;
		a = d;
		a = b.c;
		a = e[1];
		a = this.c;
		a = c;
		a = prueba2(a, a);
		a = this;
		a = new bueno();
		e = new bueno[i + 1];
		i = expresiones(this).length;
		r6 = r4 + "23";
		r6 = "23" + "23";
		a = new bueno2();
		a = new bueno();
		return e;
	}
}

class bueno2 extends bueno
{
	int j;
	void prueba(int a, int w)
	{
		j = j + i + c.i;
	}
	bueno prueba2(bueno a, bueno b)
	{
		return new bueno();
	}
	bueno prueba3(int a, int w)
	{
		return new bueno();
	}
}

class List { int d; List next; }
class Node { int d; Edge[] edges; }
class Edge { Node to, from; }

class Test { 
	int partition(int [] a, int low, int high) { 
        int pivot = a[low]; 
        int i = low; 
        int j = high; 
        int tmp; 

        while (true) { 
            while (a[i] < pivot) i = i+1; 
            while (a[j] > pivot) j = j-1; 
            if (i >= j) break; 
            tmp = a[i]; 
            a[i] = a[j]; 
            a[j] = tmp; 
            i = i + 1; 
            j = j - 1; 
        } 
        return j; 
    } 

    void quicksort(int [] a, int low, int high) { 
        if (low < high) { 
            int mid = partition(a, low, high); 
            quicksort(a, low, mid); 
            quicksort(a, mid+1, high); 
        } 
    } 
}

class Library { void println(string s) {} }

class Hello {
    static void main (string[] s) {
        Library.println("Hola Mundo!");
    }
}