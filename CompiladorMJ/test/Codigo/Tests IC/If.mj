class IfTest {

	static void main(string[] args) {

		boolean x = true;

		int z = 3;

		int y = 3;
		
		if (true)
			Library.println("first success");

		if (false)
			Library.println("first fail");
		
		if (true)
			Library.println("second success");
		else
			Library.println("second fail");
			
		if (false)
			Library.println("third fail");
		else
			Library.println("third success");
			
		if (x)
			Library.println("fourth success");
	
		x = (1 == 1);

		if (x)
			Library.println("fifth success");
			
		if (1 == 1)
			Library.println("sixeth success");

		if (1 + 3 != 4)
			Library.println("!= fail 1");
		
		if (1 + 3 != 2 + 2)
			Library.println("!= fail 2");

		if (4 != 1 + 3)
			Library.println("!= fail 3");
		
		if (2 + 1 == 4)
			Library.println("== fail 1");

		if (4 == 2 + 1)
			Library.println("== fail 2");

		if (2 + 1 == 2 + 2)
			Library.println("== fail 3");

		if (z == 1 + 1)
			Library.println("== fail 4");

		if (1 + 1 == z)
			Library.println("== fail 5");

		if (1 + 2 != z)
			Library.println("!= fail 4");

		if (z != 1 + 2)
			Library.println("!= fail 5");
		
		if (z != y)
			Library.println("!= fail 6");

		y = 4;

		if (z == y)
			Library.println("== fail 6");

		if (1 + 3 > 4)
			Library.println("> fail 1");
		
		if (1 + 3 > 2 + 2)
			Library.println("> fail 2");

		if (4 > 1 + 3)
			Library.println("> fail 3");
		
		if (1 + 3 < 4)
			Library.println("< fail 1");
		
		if (1 + 3 < 2 + 2)
			Library.println("< fail 2");

		if (4 < 1 + 3)
			Library.println("< fail 3");

		if (1 + 1 >= 4)
			Library.println(">= fail 1");
		
		if (1 + 1 >= 2 + 2)
			Library.println(">= fail 2");

		if (4 >= 1 + 5)
			Library.println(">= fail 3");
		
		if (1 + 5 <= 4)
			Library.println("<= fail 1");
		
		if (1 + 5 <= 2 + 2)
			Library.println("<= fail 2");

		if (8 <= 1 + 3)
			Library.println("<= fail 3");

		z = 3;

		if (1 + 5 <= z)
			Library.println("<= fail 4");
		
		if (z <= 1 + 1)
			Library.println("<= fail 5");

		if (z >= 2 + 2)
			Library.println(">= fail 4");
		
		if (1 >= z)
			Library.println(">= fail 5");

		if (1 + 3 < z)
			Library.println("< fail 4");
		
		if (z < 1 + 1)
			Library.println("< fail 5");

		if (1 + 1 > z)
			Library.println("> fail 4");
		
		if (z < 1 + 2)
			Library.println("> fail 5");

		if (z == 4)
		{
			Library.println("else if fail 1");
		}
		else if (z == 5)
		{
			Library.println("else if fail 2");
		}
		else if (z == 6)
		{
			Library.println("else if fail 3");
		}
		else
			Library.println("else if pass 1");

		z = 6;

		if (z == 4)
		{
			Library.println("else if fail 4");
		}
		else if (z == 5)
		{
			Library.println("else if fail 5");
		}
		else if (z == 6)
		{
			Library.println("else if pass 2");
		}
		else
			Library.println("else if fail 6");


		if (2 + 1 == 4)
		{
			Library.println("else if fail 7");
		}
		else if (4 == 2 + 1)
		{
			Library.println("else if fail 8");
		}
		else if (2 + 1 == 3 + 1)
		{
			Library.println("else if fail 9");
		}
		else
			Library.println("else if pass 3");

	}
}

class Library {
 static void println(string s){} /* prints string s followed by a newline */
 static void print(string s){}   /* prints string s */
 static void printi(int i){}     /* prints integer i */
 static void printb(boolean b){} /* prints boolean b */

 static int readi(){}     /* reads an integer from the input */
 static string readln(){} /* reads one line from the input */
 static boolean eof(){}   /* checks end-of-file on standard input */

 static int stoi(string s, int n){} /* returns the integer that s represents
                                      or n of s is not an integer */
 static string itos(int i){}   /* returns a string representation of i */
 static int[] stoa(string s){} /* an array with the ascii codes of chars in s */
 static string atos(int[] a){} /* builds a string from the ascii codes in a */

 static int random(int i){} /* returns a random number between 0 and n-1 */
 static int time(){}        /* number of milliseconds since program start */
 static int exit(int i){}   /* terminates the program with exit code n */
}
