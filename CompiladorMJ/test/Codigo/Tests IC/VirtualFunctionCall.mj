class VirtualFunctionCallTest {

	static int fun(int x)
	{
		int y = x;
		y = y + 1;
		return y;
	}

	static void main(string[] args) 
	{
		if ((new A()).plus(1) != 2)
			Library.println("Error 1");
			
		if (C.castToA(new B()).plus(1) != 3)
			Library.println("Error 2");
			
		if (C.castToA(new C()).plus(1) != 4)
			Library.println("Error 3");
			
		if ((new C()).minus(2) != 1)
			Library.println("Error 4");
			
		Library.print("Hello World");
	}
}

class A
{
	int plus(int x)
	{
		return x + 1;
	}

	int minus(int x)
	{
		return x - 1;
	}
}

class B extends A
{
	int plus(int x)
	{
		return x + 2;
	}
}

class C extends B
{
	int plus(int x)
	{
		return x + 3;
	}
	
	static A castToA(A casted)
	{
		return casted;
	}
}

class Library {
 static void println(string s){} /* prints string s followed by a newline */
 static void print(string s){}   /* prints string s */
 static void printi(int i){}     /* prints integer i */
 static void printb(boolean b){} /* prints boolean b */

 static int readi(){}     /* reads an integer from the input */
 static string readln(){} /* reads one line from the input */
 static boolean eof(){}   /* checks end-of-file on standard input */

 static int stoi(string s, int n){} /* returns the integer that s represents
                                      or n of s is not an integer */
 static string itos(int i){}   /* returns a string representation of i */
 static int[] stoa(string s){} /* an array with the ascii codes of chars in s */
 static string atos(int[] a){} /* builds a string from the ascii codes in a */

 static int random(int i){} /* returns a random number between 0 and n-1 */
 static int time(){}        /* number of milliseconds since program start */
 static int exit(int i){}   /* terminates the program with exit code n */
}
