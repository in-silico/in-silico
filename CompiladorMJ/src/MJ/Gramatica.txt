Created by PLY version 3.0 (http://www.dabeaz.com/ply)

Grammar

Rule 1     S' -> PROGRAM
Rule 2     PROGRAM -> LISTACLASES
Rule 3     LISTACLASES -> CLASESIMPLE LISTACLASES
Rule 4     LISTACLASES -> CLASEEXTENDS LISTACLASES
Rule 5     LISTACLASES -> empty
Rule 6     CLASESIMPLE -> CLASS ID { CAMPOMETODO }
Rule 7     CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO }
Rule 8     CAMPOMETODO -> FIELD CAMPOMETODO
Rule 9     CAMPOMETODO -> METHOD CAMPOMETODO
Rule 10    CAMPOMETODO -> empty
Rule 11    FIELD -> TYPE ID CAMPOS ;
Rule 12    CAMPOS -> , ID CAMPOS
Rule 13    CAMPOS -> empty
Rule 14    METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE
Rule 15    METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE
Rule 16    METHOD -> TYPE ID ( FORMALES ) BLOQUE
Rule 17    METHOD -> VOID ID ( FORMALES ) BLOQUE
Rule 18    FORMALES -> TYPE ID MASFORMALES
Rule 19    FORMALES -> empty
Rule 20    MASFORMALES -> , TYPE ID MASFORMALES
Rule 21    MASFORMALES -> empty
Rule 22    TYPE -> INT
Rule 23    TYPE -> BOOLEAN
Rule 24    TYPE -> STRING
Rule 25    TYPE -> ID
Rule 26    TYPE -> TYPE BRACKETS
Rule 27    BLOQUE -> { DECLARACION }
Rule 28    DECLARACION -> STMT DECLARACION
Rule 29    DECLARACION -> empty
Rule 30    STMT -> ID . ID ( EXPRESIONCOMA ) ;
Rule 31    STMT -> ID . ID ( ) ;
Rule 32    STMT -> EXPR . ID ( EXPRESIONCOMA ) ;
Rule 33    STMT -> EXPR . ID ( ) ;
Rule 34    STMT -> ID ( EXPRESIONCOMA ) ;
Rule 35    STMT -> ID ( ) ;
Rule 36    STMT -> LOCATION = EXPR ;
Rule 37    STMT -> RETURN ;
Rule 38    STMT -> RETURN EXPR ;
Rule 39    STMT -> IF ( EXPR ) STMT ELSE STMT
Rule 40    STMT -> IF ( EXPR ) STMT
Rule 41    STMT -> WHILE ( EXPR ) STMT
Rule 42    STMT -> BREAK ;
Rule 43    STMT -> CONTINUE ;
Rule 44    STMT -> BLOQUE
Rule 45    STMT -> TYPE ID = EXPR ;
Rule 46    STMT -> TYPE ID ;
Rule 47    EXPR -> ID . ID ( EXPRESIONCOMA )
Rule 48    EXPR -> ID . ID ( )
Rule 49    EXPR -> EXPR . ID ( EXPRESIONCOMA )
Rule 50    EXPR -> EXPR . ID ( )
Rule 51    EXPR -> ID ( EXPRESIONCOMA )
Rule 52    EXPR -> ID ( )
Rule 53    EXPR -> LOCATION
Rule 54    EXPR -> THIS
Rule 55    EXPR -> NEW ID ( )
Rule 56    EXPR -> NEW TYPE [ EXPR ]
Rule 57    EXPR -> EXPR . LENGTH
Rule 58    EXPR -> ID . LENGTH
Rule 59    EXPR -> EXPR + EXPR
Rule 60    EXPR -> EXPR - EXPR
Rule 61    EXPR -> EXPR * EXPR
Rule 62    EXPR -> EXPR / EXPR
Rule 63    EXPR -> EXPR % EXPR
Rule 64    EXPR -> EXPR AND EXPR
Rule 65    EXPR -> EXPR OR EXPR
Rule 66    EXPR -> EXPR < EXPR
Rule 67    EXPR -> EXPR MENOROIGUAL EXPR
Rule 68    EXPR -> EXPR > EXPR
Rule 69    EXPR -> EXPR MAYOROIGUAL EXPR
Rule 70    EXPR -> EXPR IGUAL EXPR
Rule 71    EXPR -> EXPR DIFERENTE EXPR
Rule 72    EXPR -> - EXPR
Rule 73    EXPR -> ! EXPR
Rule 74    EXPR -> LITERAL
Rule 75    EXPR -> ( EXPR )
Rule 76    EXPRESIONCOMA -> EXPR EXPRESIONCOMAP
Rule 77    EXPRESIONCOMAP -> , EXPR EXPRESIONCOMAP
Rule 78    EXPRESIONCOMAP -> empty
Rule 79    LOCATION -> ID
Rule 80    LOCATION -> EXPR . ID
Rule 81    LOCATION -> EXPR [ EXPR ]
Rule 82    LITERAL -> NUMERO
Rule 83    LITERAL -> STRINGID
Rule 84    LITERAL -> TRUE
Rule 85    LITERAL -> FALSE
Rule 86    LITERAL -> NULL
Rule 87    empty -> <empty>

Terminals, with rules where they appear

!                    : 72
%                    : 62
(                    : 13 14 15 16 29 30 31 32 33 34 38 39 40 46 47 48 49 50 51 54 74
)                    : 13 14 15 16 29 30 31 32 33 34 38 39 40 46 47 48 49 50 51 54 74
*                    : 60
+                    : 58
,                    : 11 19 76
-                    : 59 71
.                    : 29 30 31 32 46 47 48 49 56 57 79
/                    : 61
;                    : 10 29 30 31 32 33 34 35 36 37 41 42 44 45
<                    : 65
=                    : 35 44
>                    : 67
AND                  : 63
BOOLEAN              : 22
BRACKETS             : 25
BREAK                : 41
CLASS                : 5 6
CONTINUE             : 42
DIFERENTE            : 70
ELSE                 : 38
EXTENDS              : 6
FALSE                : 84
ID                   : 5 6 6 10 11 13 14 15 16 17 19 24 29 29 30 30 31 32 33 34 44 45 46 46 47 47 48 49 50 51 54 57 78 79
IF                   : 38 39
IGUAL                : 69
INT                  : 21
LENGTH               : 56 57
MAYOROIGUAL          : 68
MENOROIGUAL          : 66
NEW                  : 54 55
NULL                 : 85
NUMERO               : 81
OR                   : 64
RETURN               : 36 37
STATIC               : 13 14
STRING               : 23
STRINGID             : 82
THIS                 : 53
TRUE                 : 83
VOID                 : 14 16
WHILE                : 40
[                    : 55 80
]                    : 55 80
error                : 
{                    : 5 6 26
}                    : 5 6 26

Nonterminals, with rules where they appear

BLOQUE               : 13 14 15 16 43
CAMPOMETODO          : 5 6 7 8
CAMPOS               : 10 11
CLASEEXTENDS         : 3
CLASESIMPLE          : 2
DECLARACION          : 26 27
EXPR                 : 31 32 35 37 38 39 40 44 48 49 55 56 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 72 74 75 76 79 80 80
EXPRESIONCOMA        : 29 31 33 46 48 50
EXPRESIONCOMAP       : 75 76
FIELD                : 7
FORMALES             : 13 14 15 16
LISTACLASES          : 1 2 3
LITERAL              : 73
LOCATION             : 35 52
MASFORMALES          : 17 19
METHOD               : 8
PROGRAM              : 0
STMT                 : 27 38 38 39 40
TYPE                 : 10 13 15 17 19 25 44 45 55
empty                : 4 9 12 18 20 28 77

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . LISTACLASES
    (2) LISTACLASES -> . CLASESIMPLE LISTACLASES
    (3) LISTACLASES -> . CLASEEXTENDS LISTACLASES
    (4) LISTACLASES -> . empty
    (5) CLASESIMPLE -> . CLASS ID { CAMPOMETODO }
    (6) CLASEEXTENDS -> . CLASS ID EXTENDS ID { CAMPOMETODO }
    (86) empty -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 86 (empty -> .)

    LISTACLASES                    shift and go to state 1
    CLASESIMPLE                    shift and go to state 2
    PROGRAM                        shift and go to state 3
    CLASEEXTENDS                   shift and go to state 4
    empty                          shift and go to state 6

state 1

    (1) PROGRAM -> LISTACLASES .

    $end            reduce using rule 1 (PROGRAM -> LISTACLASES .)


state 2

    (2) LISTACLASES -> CLASESIMPLE . LISTACLASES
    (2) LISTACLASES -> . CLASESIMPLE LISTACLASES
    (3) LISTACLASES -> . CLASEEXTENDS LISTACLASES
    (4) LISTACLASES -> . empty
    (5) CLASESIMPLE -> . CLASS ID { CAMPOMETODO }
    (6) CLASEEXTENDS -> . CLASS ID EXTENDS ID { CAMPOMETODO }
    (86) empty -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 86 (empty -> .)

    CLASEEXTENDS                   shift and go to state 4
    CLASESIMPLE                    shift and go to state 2
    LISTACLASES                    shift and go to state 7
    empty                          shift and go to state 6

state 3

    (0) S' -> PROGRAM .



state 4

    (3) LISTACLASES -> CLASEEXTENDS . LISTACLASES
    (2) LISTACLASES -> . CLASESIMPLE LISTACLASES
    (3) LISTACLASES -> . CLASEEXTENDS LISTACLASES
    (4) LISTACLASES -> . empty
    (5) CLASESIMPLE -> . CLASS ID { CAMPOMETODO }
    (6) CLASEEXTENDS -> . CLASS ID EXTENDS ID { CAMPOMETODO }
    (86) empty -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 86 (empty -> .)

    CLASEEXTENDS                   shift and go to state 4
    LISTACLASES                    shift and go to state 8
    CLASESIMPLE                    shift and go to state 2
    empty                          shift and go to state 6

state 5

    (5) CLASESIMPLE -> CLASS . ID { CAMPOMETODO }
    (6) CLASEEXTENDS -> CLASS . ID EXTENDS ID { CAMPOMETODO }

    ID              shift and go to state 9


state 6

    (4) LISTACLASES -> empty .

    $end            reduce using rule 4 (LISTACLASES -> empty .)


state 7

    (2) LISTACLASES -> CLASESIMPLE LISTACLASES .

    $end            reduce using rule 2 (LISTACLASES -> CLASESIMPLE LISTACLASES .)


state 8

    (3) LISTACLASES -> CLASEEXTENDS LISTACLASES .

    $end            reduce using rule 3 (LISTACLASES -> CLASEEXTENDS LISTACLASES .)


state 9

    (5) CLASESIMPLE -> CLASS ID . { CAMPOMETODO }
    (6) CLASEEXTENDS -> CLASS ID . EXTENDS ID { CAMPOMETODO }

    {               shift and go to state 11
    EXTENDS         shift and go to state 10


state 10

    (6) CLASEEXTENDS -> CLASS ID EXTENDS . ID { CAMPOMETODO }

    ID              shift and go to state 12


state 11

    (5) CLASESIMPLE -> CLASS ID { . CAMPOMETODO }
    (7) CAMPOMETODO -> . FIELD CAMPOMETODO
    (8) CAMPOMETODO -> . METHOD CAMPOMETODO
    (9) CAMPOMETODO -> . empty
    (10) FIELD -> . TYPE ID CAMPOS ;
    (13) METHOD -> . STATIC TYPE ID ( FORMALES ) BLOQUE
    (14) METHOD -> . STATIC VOID ID ( FORMALES ) BLOQUE
    (15) METHOD -> . TYPE ID ( FORMALES ) BLOQUE
    (16) METHOD -> . VOID ID ( FORMALES ) BLOQUE
    (86) empty -> .
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    STATIC          shift and go to state 19
    VOID            shift and go to state 15
    }               reduce using rule 86 (empty -> .)
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    FIELD                          shift and go to state 18
    CAMPOMETODO                    shift and go to state 20
    TYPE                           shift and go to state 14
    METHOD                         shift and go to state 16
    empty                          shift and go to state 23

state 12

    (6) CLASEEXTENDS -> CLASS ID EXTENDS ID . { CAMPOMETODO }

    {               shift and go to state 24


state 13

    (23) TYPE -> STRING .

    ID              reduce using rule 23 (TYPE -> STRING .)
    BRACKETS        reduce using rule 23 (TYPE -> STRING .)
    [               reduce using rule 23 (TYPE -> STRING .)


state 14

    (10) FIELD -> TYPE . ID CAMPOS ;
    (15) METHOD -> TYPE . ID ( FORMALES ) BLOQUE
    (25) TYPE -> TYPE . BRACKETS

    ID              shift and go to state 26
    BRACKETS        shift and go to state 25


state 15

    (16) METHOD -> VOID . ID ( FORMALES ) BLOQUE

    ID              shift and go to state 27


state 16

    (8) CAMPOMETODO -> METHOD . CAMPOMETODO
    (7) CAMPOMETODO -> . FIELD CAMPOMETODO
    (8) CAMPOMETODO -> . METHOD CAMPOMETODO
    (9) CAMPOMETODO -> . empty
    (10) FIELD -> . TYPE ID CAMPOS ;
    (13) METHOD -> . STATIC TYPE ID ( FORMALES ) BLOQUE
    (14) METHOD -> . STATIC VOID ID ( FORMALES ) BLOQUE
    (15) METHOD -> . TYPE ID ( FORMALES ) BLOQUE
    (16) METHOD -> . VOID ID ( FORMALES ) BLOQUE
    (86) empty -> .
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    STATIC          shift and go to state 19
    VOID            shift and go to state 15
    }               reduce using rule 86 (empty -> .)
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    FIELD                          shift and go to state 18
    CAMPOMETODO                    shift and go to state 28
    TYPE                           shift and go to state 14
    METHOD                         shift and go to state 16
    empty                          shift and go to state 23

state 17

    (24) TYPE -> ID .

    ID              reduce using rule 24 (TYPE -> ID .)
    BRACKETS        reduce using rule 24 (TYPE -> ID .)


state 18

    (7) CAMPOMETODO -> FIELD . CAMPOMETODO
    (7) CAMPOMETODO -> . FIELD CAMPOMETODO
    (8) CAMPOMETODO -> . METHOD CAMPOMETODO
    (9) CAMPOMETODO -> . empty
    (10) FIELD -> . TYPE ID CAMPOS ;
    (13) METHOD -> . STATIC TYPE ID ( FORMALES ) BLOQUE
    (14) METHOD -> . STATIC VOID ID ( FORMALES ) BLOQUE
    (15) METHOD -> . TYPE ID ( FORMALES ) BLOQUE
    (16) METHOD -> . VOID ID ( FORMALES ) BLOQUE
    (86) empty -> .
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    STATIC          shift and go to state 19
    VOID            shift and go to state 15
    }               reduce using rule 86 (empty -> .)
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    FIELD                          shift and go to state 18
    CAMPOMETODO                    shift and go to state 29
    TYPE                           shift and go to state 14
    METHOD                         shift and go to state 16
    empty                          shift and go to state 23

state 19

    (13) METHOD -> STATIC . TYPE ID ( FORMALES ) BLOQUE
    (14) METHOD -> STATIC . VOID ID ( FORMALES ) BLOQUE
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    VOID            shift and go to state 30
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    TYPE                           shift and go to state 31

state 20

    (5) CLASESIMPLE -> CLASS ID { CAMPOMETODO . }

    }               shift and go to state 32


state 21

    (22) TYPE -> BOOLEAN .

    ID              reduce using rule 22 (TYPE -> BOOLEAN .)
    BRACKETS        reduce using rule 22 (TYPE -> BOOLEAN .)
    [               reduce using rule 22 (TYPE -> BOOLEAN .)


state 22

    (21) TYPE -> INT .

    ID              reduce using rule 21 (TYPE -> INT .)
    BRACKETS        reduce using rule 21 (TYPE -> INT .)
    [               reduce using rule 21 (TYPE -> INT .)


state 23

    (9) CAMPOMETODO -> empty .

    }               reduce using rule 9 (CAMPOMETODO -> empty .)


state 24

    (6) CLASEEXTENDS -> CLASS ID EXTENDS ID { . CAMPOMETODO }
    (7) CAMPOMETODO -> . FIELD CAMPOMETODO
    (8) CAMPOMETODO -> . METHOD CAMPOMETODO
    (9) CAMPOMETODO -> . empty
    (10) FIELD -> . TYPE ID CAMPOS ;
    (13) METHOD -> . STATIC TYPE ID ( FORMALES ) BLOQUE
    (14) METHOD -> . STATIC VOID ID ( FORMALES ) BLOQUE
    (15) METHOD -> . TYPE ID ( FORMALES ) BLOQUE
    (16) METHOD -> . VOID ID ( FORMALES ) BLOQUE
    (86) empty -> .
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    STATIC          shift and go to state 19
    VOID            shift and go to state 15
    }               reduce using rule 86 (empty -> .)
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    FIELD                          shift and go to state 18
    CAMPOMETODO                    shift and go to state 33
    TYPE                           shift and go to state 14
    METHOD                         shift and go to state 16
    empty                          shift and go to state 23

state 25

    (25) TYPE -> TYPE BRACKETS .

    ID              reduce using rule 25 (TYPE -> TYPE BRACKETS .)
    BRACKETS        reduce using rule 25 (TYPE -> TYPE BRACKETS .)
    [               reduce using rule 25 (TYPE -> TYPE BRACKETS .)


state 26

    (10) FIELD -> TYPE ID . CAMPOS ;
    (15) METHOD -> TYPE ID . ( FORMALES ) BLOQUE
    (11) CAMPOS -> . , ID CAMPOS
    (12) CAMPOS -> . empty
    (86) empty -> .

    (               shift and go to state 34
    ,               shift and go to state 35
    ;               reduce using rule 86 (empty -> .)

    CAMPOS                         shift and go to state 36
    empty                          shift and go to state 37

state 27

    (16) METHOD -> VOID ID . ( FORMALES ) BLOQUE

    (               shift and go to state 38


state 28

    (8) CAMPOMETODO -> METHOD CAMPOMETODO .

    }               reduce using rule 8 (CAMPOMETODO -> METHOD CAMPOMETODO .)


state 29

    (7) CAMPOMETODO -> FIELD CAMPOMETODO .

    }               reduce using rule 7 (CAMPOMETODO -> FIELD CAMPOMETODO .)


state 30

    (14) METHOD -> STATIC VOID . ID ( FORMALES ) BLOQUE

    ID              shift and go to state 39


state 31

    (13) METHOD -> STATIC TYPE . ID ( FORMALES ) BLOQUE
    (25) TYPE -> TYPE . BRACKETS

    ID              shift and go to state 40
    BRACKETS        shift and go to state 25


state 32

    (5) CLASESIMPLE -> CLASS ID { CAMPOMETODO } .

    CLASS           reduce using rule 5 (CLASESIMPLE -> CLASS ID { CAMPOMETODO } .)
    $end            reduce using rule 5 (CLASESIMPLE -> CLASS ID { CAMPOMETODO } .)


state 33

    (6) CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO . }

    }               shift and go to state 41


state 34

    (15) METHOD -> TYPE ID ( . FORMALES ) BLOQUE
    (17) FORMALES -> . TYPE ID MASFORMALES
    (18) FORMALES -> . empty
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (86) empty -> .

    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17
    )               reduce using rule 86 (empty -> .)

    FORMALES                       shift and go to state 42
    TYPE                           shift and go to state 43
    empty                          shift and go to state 44

state 35

    (11) CAMPOS -> , . ID CAMPOS

    ID              shift and go to state 45


state 36

    (10) FIELD -> TYPE ID CAMPOS . ;

    ;               shift and go to state 46


state 37

    (12) CAMPOS -> empty .

    ;               reduce using rule 12 (CAMPOS -> empty .)


state 38

    (16) METHOD -> VOID ID ( . FORMALES ) BLOQUE
    (17) FORMALES -> . TYPE ID MASFORMALES
    (18) FORMALES -> . empty
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (86) empty -> .

    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17
    )               reduce using rule 86 (empty -> .)

    FORMALES                       shift and go to state 47
    TYPE                           shift and go to state 43
    empty                          shift and go to state 44

state 39

    (14) METHOD -> STATIC VOID ID . ( FORMALES ) BLOQUE

    (               shift and go to state 48


state 40

    (13) METHOD -> STATIC TYPE ID . ( FORMALES ) BLOQUE

    (               shift and go to state 49


state 41

    (6) CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO } .

    CLASS           reduce using rule 6 (CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO } .)
    $end            reduce using rule 6 (CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO } .)


state 42

    (15) METHOD -> TYPE ID ( FORMALES . ) BLOQUE

    )               shift and go to state 50


state 43

    (17) FORMALES -> TYPE . ID MASFORMALES
    (25) TYPE -> TYPE . BRACKETS

    ID              shift and go to state 51
    BRACKETS        shift and go to state 25


state 44

    (18) FORMALES -> empty .

    )               reduce using rule 18 (FORMALES -> empty .)


state 45

    (11) CAMPOS -> , ID . CAMPOS
    (11) CAMPOS -> . , ID CAMPOS
    (12) CAMPOS -> . empty
    (86) empty -> .

    ,               shift and go to state 35
    ;               reduce using rule 86 (empty -> .)

    CAMPOS                         shift and go to state 52
    empty                          shift and go to state 37

state 46

    (10) FIELD -> TYPE ID CAMPOS ; .

    STATIC          reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    VOID            reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    INT             reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    BOOLEAN         reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    STRING          reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    ID              reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)
    }               reduce using rule 10 (FIELD -> TYPE ID CAMPOS ; .)


state 47

    (16) METHOD -> VOID ID ( FORMALES . ) BLOQUE

    )               shift and go to state 53


state 48

    (14) METHOD -> STATIC VOID ID ( . FORMALES ) BLOQUE
    (17) FORMALES -> . TYPE ID MASFORMALES
    (18) FORMALES -> . empty
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (86) empty -> .

    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17
    )               reduce using rule 86 (empty -> .)

    FORMALES                       shift and go to state 54
    TYPE                           shift and go to state 43
    empty                          shift and go to state 44

state 49

    (13) METHOD -> STATIC TYPE ID ( . FORMALES ) BLOQUE
    (17) FORMALES -> . TYPE ID MASFORMALES
    (18) FORMALES -> . empty
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (86) empty -> .

    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17
    )               reduce using rule 86 (empty -> .)

    FORMALES                       shift and go to state 55
    TYPE                           shift and go to state 43
    empty                          shift and go to state 44

state 50

    (15) METHOD -> TYPE ID ( FORMALES ) . BLOQUE
    (26) BLOQUE -> . { DECLARACION }

    {               shift and go to state 56

    BLOQUE                         shift and go to state 57

state 51

    (17) FORMALES -> TYPE ID . MASFORMALES
    (19) MASFORMALES -> . , TYPE ID MASFORMALES
    (20) MASFORMALES -> . empty
    (86) empty -> .

    ,               shift and go to state 60
    )               reduce using rule 86 (empty -> .)

    MASFORMALES                    shift and go to state 58
    empty                          shift and go to state 59

state 52

    (11) CAMPOS -> , ID CAMPOS .

    ;               reduce using rule 11 (CAMPOS -> , ID CAMPOS .)


state 53

    (16) METHOD -> VOID ID ( FORMALES ) . BLOQUE
    (26) BLOQUE -> . { DECLARACION }

    {               shift and go to state 56

    BLOQUE                         shift and go to state 61

state 54

    (14) METHOD -> STATIC VOID ID ( FORMALES . ) BLOQUE

    )               shift and go to state 62


state 55

    (13) METHOD -> STATIC TYPE ID ( FORMALES . ) BLOQUE

    )               shift and go to state 63


state 56

    (26) BLOQUE -> { . DECLARACION }
    (27) DECLARACION -> . STMT DECLARACION
    (28) DECLARACION -> . empty
    (29) STMT -> . ID . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> . ID . ID ( ) ;
    (31) STMT -> . EXPR . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> . EXPR . ID ( ) ;
    (33) STMT -> . ID ( EXPRESIONCOMA ) ;
    (34) STMT -> . ID ( ) ;
    (35) STMT -> . LOCATION = EXPR ;
    (36) STMT -> . RETURN ;
    (37) STMT -> . RETURN EXPR ;
    (38) STMT -> . IF ( EXPR ) STMT ELSE STMT
    (39) STMT -> . IF ( EXPR ) STMT
    (40) STMT -> . WHILE ( EXPR ) STMT
    (41) STMT -> . BREAK ;
    (42) STMT -> . CONTINUE ;
    (43) STMT -> . BLOQUE
    (44) STMT -> . TYPE ID = EXPR ;
    (45) STMT -> . TYPE ID ;
    (86) empty -> .
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (26) BLOQUE -> . { DECLARACION }
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 79
    RETURN          shift and go to state 68
    IF              shift and go to state 81
    WHILE           shift and go to state 66
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    }               reduce using rule 86 (empty -> .)
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    {               shift and go to state 56
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 86
    STMT                           shift and go to state 65
    LITERAL                        shift and go to state 77
    DECLARACION                    shift and go to state 80
    BLOQUE                         shift and go to state 78
    TYPE                           shift and go to state 87
    empty                          shift and go to state 75
    LOCATION                       shift and go to state 74

state 57

    (15) METHOD -> TYPE ID ( FORMALES ) BLOQUE .

    STATIC          reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    VOID            reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    INT             reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    BOOLEAN         reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    STRING          reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    ID              reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)
    }               reduce using rule 15 (METHOD -> TYPE ID ( FORMALES ) BLOQUE .)


state 58

    (17) FORMALES -> TYPE ID MASFORMALES .

    )               reduce using rule 17 (FORMALES -> TYPE ID MASFORMALES .)


state 59

    (20) MASFORMALES -> empty .

    )               reduce using rule 20 (MASFORMALES -> empty .)


state 60

    (19) MASFORMALES -> , . TYPE ID MASFORMALES
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    ID              shift and go to state 17

    TYPE                           shift and go to state 88

state 61

    (16) METHOD -> VOID ID ( FORMALES ) BLOQUE .

    STATIC          reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    VOID            reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    INT             reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    BOOLEAN         reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    STRING          reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    ID              reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)
    }               reduce using rule 16 (METHOD -> VOID ID ( FORMALES ) BLOQUE .)


state 62

    (14) METHOD -> STATIC VOID ID ( FORMALES ) . BLOQUE
    (26) BLOQUE -> . { DECLARACION }

    {               shift and go to state 56

    BLOQUE                         shift and go to state 89

state 63

    (13) METHOD -> STATIC TYPE ID ( FORMALES ) . BLOQUE
    (26) BLOQUE -> . { DECLARACION }

    {               shift and go to state 56

    BLOQUE                         shift and go to state 90

state 64

    (82) LITERAL -> STRINGID .

    .               reduce using rule 82 (LITERAL -> STRINGID .)
    +               reduce using rule 82 (LITERAL -> STRINGID .)
    -               reduce using rule 82 (LITERAL -> STRINGID .)
    *               reduce using rule 82 (LITERAL -> STRINGID .)
    /               reduce using rule 82 (LITERAL -> STRINGID .)
    %               reduce using rule 82 (LITERAL -> STRINGID .)
    AND             reduce using rule 82 (LITERAL -> STRINGID .)
    OR              reduce using rule 82 (LITERAL -> STRINGID .)
    <               reduce using rule 82 (LITERAL -> STRINGID .)
    MENOROIGUAL     reduce using rule 82 (LITERAL -> STRINGID .)
    >               reduce using rule 82 (LITERAL -> STRINGID .)
    MAYOROIGUAL     reduce using rule 82 (LITERAL -> STRINGID .)
    IGUAL           reduce using rule 82 (LITERAL -> STRINGID .)
    DIFERENTE       reduce using rule 82 (LITERAL -> STRINGID .)
    [               reduce using rule 82 (LITERAL -> STRINGID .)
    ;               reduce using rule 82 (LITERAL -> STRINGID .)
    )               reduce using rule 82 (LITERAL -> STRINGID .)
    ,               reduce using rule 82 (LITERAL -> STRINGID .)
    ]               reduce using rule 82 (LITERAL -> STRINGID .)


state 65

    (27) DECLARACION -> STMT . DECLARACION
    (27) DECLARACION -> . STMT DECLARACION
    (28) DECLARACION -> . empty
    (29) STMT -> . ID . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> . ID . ID ( ) ;
    (31) STMT -> . EXPR . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> . EXPR . ID ( ) ;
    (33) STMT -> . ID ( EXPRESIONCOMA ) ;
    (34) STMT -> . ID ( ) ;
    (35) STMT -> . LOCATION = EXPR ;
    (36) STMT -> . RETURN ;
    (37) STMT -> . RETURN EXPR ;
    (38) STMT -> . IF ( EXPR ) STMT ELSE STMT
    (39) STMT -> . IF ( EXPR ) STMT
    (40) STMT -> . WHILE ( EXPR ) STMT
    (41) STMT -> . BREAK ;
    (42) STMT -> . CONTINUE ;
    (43) STMT -> . BLOQUE
    (44) STMT -> . TYPE ID = EXPR ;
    (45) STMT -> . TYPE ID ;
    (86) empty -> .
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (26) BLOQUE -> . { DECLARACION }
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 79
    RETURN          shift and go to state 68
    IF              shift and go to state 81
    WHILE           shift and go to state 66
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    }               reduce using rule 86 (empty -> .)
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    {               shift and go to state 56
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 86
    STMT                           shift and go to state 65
    LITERAL                        shift and go to state 77
    DECLARACION                    shift and go to state 91
    BLOQUE                         shift and go to state 78
    TYPE                           shift and go to state 87
    empty                          shift and go to state 75
    LOCATION                       shift and go to state 74

state 66

    (40) STMT -> WHILE . ( EXPR ) STMT

    (               shift and go to state 92


state 67

    (54) EXPR -> NEW . ID ( )
    (55) EXPR -> NEW . TYPE [ EXPR ]
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS

    ID              shift and go to state 94
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13

    TYPE                           shift and go to state 93

state 68

    (36) STMT -> RETURN . ;
    (37) STMT -> RETURN . EXPR ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ;               shift and go to state 96
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 98
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 69

    (83) LITERAL -> TRUE .

    .               reduce using rule 83 (LITERAL -> TRUE .)
    +               reduce using rule 83 (LITERAL -> TRUE .)
    -               reduce using rule 83 (LITERAL -> TRUE .)
    *               reduce using rule 83 (LITERAL -> TRUE .)
    /               reduce using rule 83 (LITERAL -> TRUE .)
    %               reduce using rule 83 (LITERAL -> TRUE .)
    AND             reduce using rule 83 (LITERAL -> TRUE .)
    OR              reduce using rule 83 (LITERAL -> TRUE .)
    <               reduce using rule 83 (LITERAL -> TRUE .)
    MENOROIGUAL     reduce using rule 83 (LITERAL -> TRUE .)
    >               reduce using rule 83 (LITERAL -> TRUE .)
    MAYOROIGUAL     reduce using rule 83 (LITERAL -> TRUE .)
    IGUAL           reduce using rule 83 (LITERAL -> TRUE .)
    DIFERENTE       reduce using rule 83 (LITERAL -> TRUE .)
    [               reduce using rule 83 (LITERAL -> TRUE .)
    ;               reduce using rule 83 (LITERAL -> TRUE .)
    )               reduce using rule 83 (LITERAL -> TRUE .)
    ,               reduce using rule 83 (LITERAL -> TRUE .)
    ]               reduce using rule 83 (LITERAL -> TRUE .)


state 70

    (72) EXPR -> ! . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 99
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 71

    (85) LITERAL -> NULL .

    .               reduce using rule 85 (LITERAL -> NULL .)
    +               reduce using rule 85 (LITERAL -> NULL .)
    -               reduce using rule 85 (LITERAL -> NULL .)
    *               reduce using rule 85 (LITERAL -> NULL .)
    /               reduce using rule 85 (LITERAL -> NULL .)
    %               reduce using rule 85 (LITERAL -> NULL .)
    AND             reduce using rule 85 (LITERAL -> NULL .)
    OR              reduce using rule 85 (LITERAL -> NULL .)
    <               reduce using rule 85 (LITERAL -> NULL .)
    MENOROIGUAL     reduce using rule 85 (LITERAL -> NULL .)
    >               reduce using rule 85 (LITERAL -> NULL .)
    MAYOROIGUAL     reduce using rule 85 (LITERAL -> NULL .)
    IGUAL           reduce using rule 85 (LITERAL -> NULL .)
    DIFERENTE       reduce using rule 85 (LITERAL -> NULL .)
    [               reduce using rule 85 (LITERAL -> NULL .)
    ;               reduce using rule 85 (LITERAL -> NULL .)
    )               reduce using rule 85 (LITERAL -> NULL .)
    ,               reduce using rule 85 (LITERAL -> NULL .)
    ]               reduce using rule 85 (LITERAL -> NULL .)


state 72

    (74) EXPR -> ( . EXPR )
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 100
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 73

    (71) EXPR -> - . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 101
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 74

    (35) STMT -> LOCATION . = EXPR ;
    (52) EXPR -> LOCATION .

    =               shift and go to state 102
    .               reduce using rule 52 (EXPR -> LOCATION .)
    +               reduce using rule 52 (EXPR -> LOCATION .)
    -               reduce using rule 52 (EXPR -> LOCATION .)
    *               reduce using rule 52 (EXPR -> LOCATION .)
    /               reduce using rule 52 (EXPR -> LOCATION .)
    %               reduce using rule 52 (EXPR -> LOCATION .)
    AND             reduce using rule 52 (EXPR -> LOCATION .)
    OR              reduce using rule 52 (EXPR -> LOCATION .)
    <               reduce using rule 52 (EXPR -> LOCATION .)
    MENOROIGUAL     reduce using rule 52 (EXPR -> LOCATION .)
    >               reduce using rule 52 (EXPR -> LOCATION .)
    MAYOROIGUAL     reduce using rule 52 (EXPR -> LOCATION .)
    IGUAL           reduce using rule 52 (EXPR -> LOCATION .)
    DIFERENTE       reduce using rule 52 (EXPR -> LOCATION .)
    [               reduce using rule 52 (EXPR -> LOCATION .)


state 75

    (28) DECLARACION -> empty .

    }               reduce using rule 28 (DECLARACION -> empty .)


state 76

    (81) LITERAL -> NUMERO .

    .               reduce using rule 81 (LITERAL -> NUMERO .)
    +               reduce using rule 81 (LITERAL -> NUMERO .)
    -               reduce using rule 81 (LITERAL -> NUMERO .)
    *               reduce using rule 81 (LITERAL -> NUMERO .)
    /               reduce using rule 81 (LITERAL -> NUMERO .)
    %               reduce using rule 81 (LITERAL -> NUMERO .)
    AND             reduce using rule 81 (LITERAL -> NUMERO .)
    OR              reduce using rule 81 (LITERAL -> NUMERO .)
    <               reduce using rule 81 (LITERAL -> NUMERO .)
    MENOROIGUAL     reduce using rule 81 (LITERAL -> NUMERO .)
    >               reduce using rule 81 (LITERAL -> NUMERO .)
    MAYOROIGUAL     reduce using rule 81 (LITERAL -> NUMERO .)
    IGUAL           reduce using rule 81 (LITERAL -> NUMERO .)
    DIFERENTE       reduce using rule 81 (LITERAL -> NUMERO .)
    [               reduce using rule 81 (LITERAL -> NUMERO .)
    ;               reduce using rule 81 (LITERAL -> NUMERO .)
    )               reduce using rule 81 (LITERAL -> NUMERO .)
    ,               reduce using rule 81 (LITERAL -> NUMERO .)
    ]               reduce using rule 81 (LITERAL -> NUMERO .)


state 77

    (73) EXPR -> LITERAL .

    ;               reduce using rule 73 (EXPR -> LITERAL .)
    .               reduce using rule 73 (EXPR -> LITERAL .)
    +               reduce using rule 73 (EXPR -> LITERAL .)
    -               reduce using rule 73 (EXPR -> LITERAL .)
    *               reduce using rule 73 (EXPR -> LITERAL .)
    /               reduce using rule 73 (EXPR -> LITERAL .)
    %               reduce using rule 73 (EXPR -> LITERAL .)
    AND             reduce using rule 73 (EXPR -> LITERAL .)
    OR              reduce using rule 73 (EXPR -> LITERAL .)
    <               reduce using rule 73 (EXPR -> LITERAL .)
    MENOROIGUAL     reduce using rule 73 (EXPR -> LITERAL .)
    >               reduce using rule 73 (EXPR -> LITERAL .)
    MAYOROIGUAL     reduce using rule 73 (EXPR -> LITERAL .)
    IGUAL           reduce using rule 73 (EXPR -> LITERAL .)
    DIFERENTE       reduce using rule 73 (EXPR -> LITERAL .)
    [               reduce using rule 73 (EXPR -> LITERAL .)
    )               reduce using rule 73 (EXPR -> LITERAL .)
    ,               reduce using rule 73 (EXPR -> LITERAL .)
    ]               reduce using rule 73 (EXPR -> LITERAL .)


state 78

    (43) STMT -> BLOQUE .

    ID              reduce using rule 43 (STMT -> BLOQUE .)
    RETURN          reduce using rule 43 (STMT -> BLOQUE .)
    IF              reduce using rule 43 (STMT -> BLOQUE .)
    WHILE           reduce using rule 43 (STMT -> BLOQUE .)
    BREAK           reduce using rule 43 (STMT -> BLOQUE .)
    CONTINUE        reduce using rule 43 (STMT -> BLOQUE .)
    THIS            reduce using rule 43 (STMT -> BLOQUE .)
    NEW             reduce using rule 43 (STMT -> BLOQUE .)
    -               reduce using rule 43 (STMT -> BLOQUE .)
    !               reduce using rule 43 (STMT -> BLOQUE .)
    (               reduce using rule 43 (STMT -> BLOQUE .)
    {               reduce using rule 43 (STMT -> BLOQUE .)
    INT             reduce using rule 43 (STMT -> BLOQUE .)
    BOOLEAN         reduce using rule 43 (STMT -> BLOQUE .)
    STRING          reduce using rule 43 (STMT -> BLOQUE .)
    NUMERO          reduce using rule 43 (STMT -> BLOQUE .)
    STRINGID        reduce using rule 43 (STMT -> BLOQUE .)
    TRUE            reduce using rule 43 (STMT -> BLOQUE .)
    FALSE           reduce using rule 43 (STMT -> BLOQUE .)
    NULL            reduce using rule 43 (STMT -> BLOQUE .)
    }               reduce using rule 43 (STMT -> BLOQUE .)
    ELSE            reduce using rule 43 (STMT -> BLOQUE .)


state 79

    (29) STMT -> ID . . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> ID . . ID ( ) ;
    (33) STMT -> ID . ( EXPRESIONCOMA ) ;
    (34) STMT -> ID . ( ) ;
    (46) EXPR -> ID . . ID ( EXPRESIONCOMA )
    (47) EXPR -> ID . . ID ( )
    (50) EXPR -> ID . ( EXPRESIONCOMA )
    (51) EXPR -> ID . ( )
    (57) EXPR -> ID . . LENGTH
    (78) LOCATION -> ID .
    (24) TYPE -> ID .

    (               shift and go to state 103
    =               reduce using rule 78 (LOCATION -> ID .)
    .               reduce using rule 78 (LOCATION -> ID .)
    +               reduce using rule 78 (LOCATION -> ID .)
    -               reduce using rule 78 (LOCATION -> ID .)
    *               reduce using rule 78 (LOCATION -> ID .)
    /               reduce using rule 78 (LOCATION -> ID .)
    %               reduce using rule 78 (LOCATION -> ID .)
    AND             reduce using rule 78 (LOCATION -> ID .)
    OR              reduce using rule 78 (LOCATION -> ID .)
    <               reduce using rule 78 (LOCATION -> ID .)
    MENOROIGUAL     reduce using rule 78 (LOCATION -> ID .)
    >               reduce using rule 78 (LOCATION -> ID .)
    MAYOROIGUAL     reduce using rule 78 (LOCATION -> ID .)
    IGUAL           reduce using rule 78 (LOCATION -> ID .)
    DIFERENTE       reduce using rule 78 (LOCATION -> ID .)
    [               reduce using rule 78 (LOCATION -> ID .)
    ID              reduce using rule 24 (TYPE -> ID .)
    BRACKETS        reduce using rule 24 (TYPE -> ID .)

  ! .               [ shift and go to state 104 ]


state 80

    (26) BLOQUE -> { DECLARACION . }

    }               shift and go to state 105


state 81

    (38) STMT -> IF . ( EXPR ) STMT ELSE STMT
    (39) STMT -> IF . ( EXPR ) STMT

    (               shift and go to state 106


state 82

    (84) LITERAL -> FALSE .

    .               reduce using rule 84 (LITERAL -> FALSE .)
    +               reduce using rule 84 (LITERAL -> FALSE .)
    -               reduce using rule 84 (LITERAL -> FALSE .)
    *               reduce using rule 84 (LITERAL -> FALSE .)
    /               reduce using rule 84 (LITERAL -> FALSE .)
    %               reduce using rule 84 (LITERAL -> FALSE .)
    AND             reduce using rule 84 (LITERAL -> FALSE .)
    OR              reduce using rule 84 (LITERAL -> FALSE .)
    <               reduce using rule 84 (LITERAL -> FALSE .)
    MENOROIGUAL     reduce using rule 84 (LITERAL -> FALSE .)
    >               reduce using rule 84 (LITERAL -> FALSE .)
    MAYOROIGUAL     reduce using rule 84 (LITERAL -> FALSE .)
    IGUAL           reduce using rule 84 (LITERAL -> FALSE .)
    DIFERENTE       reduce using rule 84 (LITERAL -> FALSE .)
    [               reduce using rule 84 (LITERAL -> FALSE .)
    ;               reduce using rule 84 (LITERAL -> FALSE .)
    )               reduce using rule 84 (LITERAL -> FALSE .)
    ,               reduce using rule 84 (LITERAL -> FALSE .)
    ]               reduce using rule 84 (LITERAL -> FALSE .)


state 83

    (53) EXPR -> THIS .

    ;               reduce using rule 53 (EXPR -> THIS .)
    .               reduce using rule 53 (EXPR -> THIS .)
    +               reduce using rule 53 (EXPR -> THIS .)
    -               reduce using rule 53 (EXPR -> THIS .)
    *               reduce using rule 53 (EXPR -> THIS .)
    /               reduce using rule 53 (EXPR -> THIS .)
    %               reduce using rule 53 (EXPR -> THIS .)
    AND             reduce using rule 53 (EXPR -> THIS .)
    OR              reduce using rule 53 (EXPR -> THIS .)
    <               reduce using rule 53 (EXPR -> THIS .)
    MENOROIGUAL     reduce using rule 53 (EXPR -> THIS .)
    >               reduce using rule 53 (EXPR -> THIS .)
    MAYOROIGUAL     reduce using rule 53 (EXPR -> THIS .)
    IGUAL           reduce using rule 53 (EXPR -> THIS .)
    DIFERENTE       reduce using rule 53 (EXPR -> THIS .)
    [               reduce using rule 53 (EXPR -> THIS .)
    )               reduce using rule 53 (EXPR -> THIS .)
    ,               reduce using rule 53 (EXPR -> THIS .)
    ]               reduce using rule 53 (EXPR -> THIS .)


state 84

    (41) STMT -> BREAK . ;

    ;               shift and go to state 107


state 85

    (42) STMT -> CONTINUE . ;

    ;               shift and go to state 108


state 86

    (31) STMT -> EXPR . . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> EXPR . . ID ( ) ;
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    .               shift and go to state 116
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 87

    (44) STMT -> TYPE . ID = EXPR ;
    (45) STMT -> TYPE . ID ;
    (25) TYPE -> TYPE . BRACKETS

    ID              shift and go to state 124
    BRACKETS        shift and go to state 25


state 88

    (19) MASFORMALES -> , TYPE . ID MASFORMALES
    (25) TYPE -> TYPE . BRACKETS

    ID              shift and go to state 125
    BRACKETS        shift and go to state 25


state 89

    (14) METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .

    STATIC          reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    VOID            reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    INT             reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    BOOLEAN         reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    STRING          reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    ID              reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)
    }               reduce using rule 14 (METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE .)


state 90

    (13) METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .

    STATIC          reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    VOID            reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    INT             reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    BOOLEAN         reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    STRING          reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    ID              reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)
    }               reduce using rule 13 (METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE .)


state 91

    (27) DECLARACION -> STMT DECLARACION .

    }               reduce using rule 27 (DECLARACION -> STMT DECLARACION .)


state 92

    (40) STMT -> WHILE ( . EXPR ) STMT
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 126
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 93

    (55) EXPR -> NEW TYPE . [ EXPR ]
    (25) TYPE -> TYPE . BRACKETS

    [               shift and go to state 127
    BRACKETS        shift and go to state 25


state 94

    (54) EXPR -> NEW ID . ( )
    (24) TYPE -> ID .

    (               shift and go to state 128
    [               reduce using rule 24 (TYPE -> ID .)
    BRACKETS        reduce using rule 24 (TYPE -> ID .)


state 95

    (52) EXPR -> LOCATION .

    ;               reduce using rule 52 (EXPR -> LOCATION .)
    .               reduce using rule 52 (EXPR -> LOCATION .)
    +               reduce using rule 52 (EXPR -> LOCATION .)
    -               reduce using rule 52 (EXPR -> LOCATION .)
    *               reduce using rule 52 (EXPR -> LOCATION .)
    /               reduce using rule 52 (EXPR -> LOCATION .)
    %               reduce using rule 52 (EXPR -> LOCATION .)
    AND             reduce using rule 52 (EXPR -> LOCATION .)
    OR              reduce using rule 52 (EXPR -> LOCATION .)
    <               reduce using rule 52 (EXPR -> LOCATION .)
    MENOROIGUAL     reduce using rule 52 (EXPR -> LOCATION .)
    >               reduce using rule 52 (EXPR -> LOCATION .)
    MAYOROIGUAL     reduce using rule 52 (EXPR -> LOCATION .)
    IGUAL           reduce using rule 52 (EXPR -> LOCATION .)
    DIFERENTE       reduce using rule 52 (EXPR -> LOCATION .)
    [               reduce using rule 52 (EXPR -> LOCATION .)
    )               reduce using rule 52 (EXPR -> LOCATION .)
    ,               reduce using rule 52 (EXPR -> LOCATION .)
    ]               reduce using rule 52 (EXPR -> LOCATION .)


state 96

    (36) STMT -> RETURN ; .

    ID              reduce using rule 36 (STMT -> RETURN ; .)
    RETURN          reduce using rule 36 (STMT -> RETURN ; .)
    IF              reduce using rule 36 (STMT -> RETURN ; .)
    WHILE           reduce using rule 36 (STMT -> RETURN ; .)
    BREAK           reduce using rule 36 (STMT -> RETURN ; .)
    CONTINUE        reduce using rule 36 (STMT -> RETURN ; .)
    THIS            reduce using rule 36 (STMT -> RETURN ; .)
    NEW             reduce using rule 36 (STMT -> RETURN ; .)
    -               reduce using rule 36 (STMT -> RETURN ; .)
    !               reduce using rule 36 (STMT -> RETURN ; .)
    (               reduce using rule 36 (STMT -> RETURN ; .)
    {               reduce using rule 36 (STMT -> RETURN ; .)
    INT             reduce using rule 36 (STMT -> RETURN ; .)
    BOOLEAN         reduce using rule 36 (STMT -> RETURN ; .)
    STRING          reduce using rule 36 (STMT -> RETURN ; .)
    NUMERO          reduce using rule 36 (STMT -> RETURN ; .)
    STRINGID        reduce using rule 36 (STMT -> RETURN ; .)
    TRUE            reduce using rule 36 (STMT -> RETURN ; .)
    FALSE           reduce using rule 36 (STMT -> RETURN ; .)
    NULL            reduce using rule 36 (STMT -> RETURN ; .)
    }               reduce using rule 36 (STMT -> RETURN ; .)
    ELSE            reduce using rule 36 (STMT -> RETURN ; .)


state 97

    (46) EXPR -> ID . . ID ( EXPRESIONCOMA )
    (47) EXPR -> ID . . ID ( )
    (50) EXPR -> ID . ( EXPRESIONCOMA )
    (51) EXPR -> ID . ( )
    (57) EXPR -> ID . . LENGTH
    (78) LOCATION -> ID .

    (               shift and go to state 129
    .               reduce using rule 78 (LOCATION -> ID .)
    +               reduce using rule 78 (LOCATION -> ID .)
    -               reduce using rule 78 (LOCATION -> ID .)
    *               reduce using rule 78 (LOCATION -> ID .)
    /               reduce using rule 78 (LOCATION -> ID .)
    %               reduce using rule 78 (LOCATION -> ID .)
    AND             reduce using rule 78 (LOCATION -> ID .)
    OR              reduce using rule 78 (LOCATION -> ID .)
    <               reduce using rule 78 (LOCATION -> ID .)
    MENOROIGUAL     reduce using rule 78 (LOCATION -> ID .)
    >               reduce using rule 78 (LOCATION -> ID .)
    MAYOROIGUAL     reduce using rule 78 (LOCATION -> ID .)
    IGUAL           reduce using rule 78 (LOCATION -> ID .)
    DIFERENTE       reduce using rule 78 (LOCATION -> ID .)
    [               reduce using rule 78 (LOCATION -> ID .)
    ,               reduce using rule 78 (LOCATION -> ID .)
    )               reduce using rule 78 (LOCATION -> ID .)
    ;               reduce using rule 78 (LOCATION -> ID .)
    ]               reduce using rule 78 (LOCATION -> ID .)

  ! .               [ shift and go to state 130 ]


state 98

    (37) STMT -> RETURN EXPR . ;
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               shift and go to state 132
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 99

    (72) EXPR -> ! EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 72 (EXPR -> ! EXPR .)
    +               reduce using rule 72 (EXPR -> ! EXPR .)
    -               reduce using rule 72 (EXPR -> ! EXPR .)
    *               reduce using rule 72 (EXPR -> ! EXPR .)
    /               reduce using rule 72 (EXPR -> ! EXPR .)
    %               reduce using rule 72 (EXPR -> ! EXPR .)
    AND             reduce using rule 72 (EXPR -> ! EXPR .)
    OR              reduce using rule 72 (EXPR -> ! EXPR .)
    <               reduce using rule 72 (EXPR -> ! EXPR .)
    MENOROIGUAL     reduce using rule 72 (EXPR -> ! EXPR .)
    >               reduce using rule 72 (EXPR -> ! EXPR .)
    MAYOROIGUAL     reduce using rule 72 (EXPR -> ! EXPR .)
    IGUAL           reduce using rule 72 (EXPR -> ! EXPR .)
    DIFERENTE       reduce using rule 72 (EXPR -> ! EXPR .)
    )               reduce using rule 72 (EXPR -> ! EXPR .)
    ,               reduce using rule 72 (EXPR -> ! EXPR .)
    ]               reduce using rule 72 (EXPR -> ! EXPR .)
    .               shift and go to state 131
    [               shift and go to state 120

  ! .               [ reduce using rule 72 (EXPR -> ! EXPR .) ]
  ! [               [ reduce using rule 72 (EXPR -> ! EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! *               [ shift and go to state 113 ]
  ! /               [ shift and go to state 115 ]
  ! %               [ shift and go to state 111 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 100

    (74) EXPR -> ( EXPR . )
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    )               shift and go to state 133
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 101

    (71) EXPR -> - EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 71 (EXPR -> - EXPR .)
    +               reduce using rule 71 (EXPR -> - EXPR .)
    -               reduce using rule 71 (EXPR -> - EXPR .)
    AND             reduce using rule 71 (EXPR -> - EXPR .)
    OR              reduce using rule 71 (EXPR -> - EXPR .)
    <               reduce using rule 71 (EXPR -> - EXPR .)
    MENOROIGUAL     reduce using rule 71 (EXPR -> - EXPR .)
    >               reduce using rule 71 (EXPR -> - EXPR .)
    MAYOROIGUAL     reduce using rule 71 (EXPR -> - EXPR .)
    IGUAL           reduce using rule 71 (EXPR -> - EXPR .)
    DIFERENTE       reduce using rule 71 (EXPR -> - EXPR .)
    )               reduce using rule 71 (EXPR -> - EXPR .)
    ,               reduce using rule 71 (EXPR -> - EXPR .)
    ]               reduce using rule 71 (EXPR -> - EXPR .)
    .               shift and go to state 131
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 71 (EXPR -> - EXPR .) ]
  ! *               [ reduce using rule 71 (EXPR -> - EXPR .) ]
  ! /               [ reduce using rule 71 (EXPR -> - EXPR .) ]
  ! %               [ reduce using rule 71 (EXPR -> - EXPR .) ]
  ! [               [ reduce using rule 71 (EXPR -> - EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 102

    (35) STMT -> LOCATION = . EXPR ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 134
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 103

    (33) STMT -> ID ( . EXPRESIONCOMA ) ;
    (34) STMT -> ID ( . ) ;
    (50) EXPR -> ID ( . EXPRESIONCOMA )
    (51) EXPR -> ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 136
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 135
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 104

    (29) STMT -> ID . . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> ID . . ID ( ) ;
    (46) EXPR -> ID . . ID ( EXPRESIONCOMA )
    (47) EXPR -> ID . . ID ( )
    (57) EXPR -> ID . . LENGTH

    ID              shift and go to state 139
    LENGTH          shift and go to state 138


state 105

    (26) BLOQUE -> { DECLARACION } .

    ID              reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    RETURN          reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    IF              reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    WHILE           reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    BREAK           reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    CONTINUE        reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    THIS            reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    NEW             reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    -               reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    !               reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    (               reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    {               reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    INT             reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    BOOLEAN         reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    STRING          reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    NUMERO          reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    STRINGID        reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    TRUE            reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    FALSE           reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    NULL            reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    }               reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    ELSE            reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    STATIC          reduce using rule 26 (BLOQUE -> { DECLARACION } .)
    VOID            reduce using rule 26 (BLOQUE -> { DECLARACION } .)


state 106

    (38) STMT -> IF ( . EXPR ) STMT ELSE STMT
    (39) STMT -> IF ( . EXPR ) STMT
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 140
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 107

    (41) STMT -> BREAK ; .

    ID              reduce using rule 41 (STMT -> BREAK ; .)
    RETURN          reduce using rule 41 (STMT -> BREAK ; .)
    IF              reduce using rule 41 (STMT -> BREAK ; .)
    WHILE           reduce using rule 41 (STMT -> BREAK ; .)
    BREAK           reduce using rule 41 (STMT -> BREAK ; .)
    CONTINUE        reduce using rule 41 (STMT -> BREAK ; .)
    THIS            reduce using rule 41 (STMT -> BREAK ; .)
    NEW             reduce using rule 41 (STMT -> BREAK ; .)
    -               reduce using rule 41 (STMT -> BREAK ; .)
    !               reduce using rule 41 (STMT -> BREAK ; .)
    (               reduce using rule 41 (STMT -> BREAK ; .)
    {               reduce using rule 41 (STMT -> BREAK ; .)
    INT             reduce using rule 41 (STMT -> BREAK ; .)
    BOOLEAN         reduce using rule 41 (STMT -> BREAK ; .)
    STRING          reduce using rule 41 (STMT -> BREAK ; .)
    NUMERO          reduce using rule 41 (STMT -> BREAK ; .)
    STRINGID        reduce using rule 41 (STMT -> BREAK ; .)
    TRUE            reduce using rule 41 (STMT -> BREAK ; .)
    FALSE           reduce using rule 41 (STMT -> BREAK ; .)
    NULL            reduce using rule 41 (STMT -> BREAK ; .)
    }               reduce using rule 41 (STMT -> BREAK ; .)
    ELSE            reduce using rule 41 (STMT -> BREAK ; .)


state 108

    (42) STMT -> CONTINUE ; .

    ID              reduce using rule 42 (STMT -> CONTINUE ; .)
    RETURN          reduce using rule 42 (STMT -> CONTINUE ; .)
    IF              reduce using rule 42 (STMT -> CONTINUE ; .)
    WHILE           reduce using rule 42 (STMT -> CONTINUE ; .)
    BREAK           reduce using rule 42 (STMT -> CONTINUE ; .)
    CONTINUE        reduce using rule 42 (STMT -> CONTINUE ; .)
    THIS            reduce using rule 42 (STMT -> CONTINUE ; .)
    NEW             reduce using rule 42 (STMT -> CONTINUE ; .)
    -               reduce using rule 42 (STMT -> CONTINUE ; .)
    !               reduce using rule 42 (STMT -> CONTINUE ; .)
    (               reduce using rule 42 (STMT -> CONTINUE ; .)
    {               reduce using rule 42 (STMT -> CONTINUE ; .)
    INT             reduce using rule 42 (STMT -> CONTINUE ; .)
    BOOLEAN         reduce using rule 42 (STMT -> CONTINUE ; .)
    STRING          reduce using rule 42 (STMT -> CONTINUE ; .)
    NUMERO          reduce using rule 42 (STMT -> CONTINUE ; .)
    STRINGID        reduce using rule 42 (STMT -> CONTINUE ; .)
    TRUE            reduce using rule 42 (STMT -> CONTINUE ; .)
    FALSE           reduce using rule 42 (STMT -> CONTINUE ; .)
    NULL            reduce using rule 42 (STMT -> CONTINUE ; .)
    }               reduce using rule 42 (STMT -> CONTINUE ; .)
    ELSE            reduce using rule 42 (STMT -> CONTINUE ; .)


state 109

    (69) EXPR -> EXPR IGUAL . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 141
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 110

    (70) EXPR -> EXPR DIFERENTE . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 142
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 111

    (62) EXPR -> EXPR % . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 143
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 112

    (58) EXPR -> EXPR + . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 144
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 113

    (60) EXPR -> EXPR * . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 145
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 114

    (59) EXPR -> EXPR - . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 146
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 115

    (61) EXPR -> EXPR / . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 147
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 116

    (31) STMT -> EXPR . . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> EXPR . . ID ( ) ;
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (79) LOCATION -> EXPR . . ID

    ID              shift and go to state 149
    LENGTH          shift and go to state 148


state 117

    (65) EXPR -> EXPR < . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 150
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 118

    (67) EXPR -> EXPR > . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 151
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 119

    (66) EXPR -> EXPR MENOROIGUAL . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 152
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 120

    (80) LOCATION -> EXPR [ . EXPR ]
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 153
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 121

    (63) EXPR -> EXPR AND . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 154
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 122

    (68) EXPR -> EXPR MAYOROIGUAL . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 155
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 123

    (64) EXPR -> EXPR OR . EXPR
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 156
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 124

    (44) STMT -> TYPE ID . = EXPR ;
    (45) STMT -> TYPE ID . ;

    =               shift and go to state 157
    ;               shift and go to state 158


state 125

    (19) MASFORMALES -> , TYPE ID . MASFORMALES
    (19) MASFORMALES -> . , TYPE ID MASFORMALES
    (20) MASFORMALES -> . empty
    (86) empty -> .

    ,               shift and go to state 60
    )               reduce using rule 86 (empty -> .)

    MASFORMALES                    shift and go to state 159
    empty                          shift and go to state 59

state 126

    (40) STMT -> WHILE ( EXPR . ) STMT
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    )               shift and go to state 160
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 127

    (55) EXPR -> NEW TYPE [ . EXPR ]
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    LITERAL                        shift and go to state 77
    EXPR                           shift and go to state 161
    LOCATION                       shift and go to state 95

state 128

    (54) EXPR -> NEW ID ( . )

    )               shift and go to state 162


state 129

    (50) EXPR -> ID ( . EXPRESIONCOMA )
    (51) EXPR -> ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 164
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 163
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 130

    (46) EXPR -> ID . . ID ( EXPRESIONCOMA )
    (47) EXPR -> ID . . ID ( )
    (57) EXPR -> ID . . LENGTH

    ID              shift and go to state 165
    LENGTH          shift and go to state 138


state 131

    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (79) LOCATION -> EXPR . . ID

    ID              shift and go to state 166
    LENGTH          shift and go to state 148


state 132

    (37) STMT -> RETURN EXPR ; .

    ID              reduce using rule 37 (STMT -> RETURN EXPR ; .)
    RETURN          reduce using rule 37 (STMT -> RETURN EXPR ; .)
    IF              reduce using rule 37 (STMT -> RETURN EXPR ; .)
    WHILE           reduce using rule 37 (STMT -> RETURN EXPR ; .)
    BREAK           reduce using rule 37 (STMT -> RETURN EXPR ; .)
    CONTINUE        reduce using rule 37 (STMT -> RETURN EXPR ; .)
    THIS            reduce using rule 37 (STMT -> RETURN EXPR ; .)
    NEW             reduce using rule 37 (STMT -> RETURN EXPR ; .)
    -               reduce using rule 37 (STMT -> RETURN EXPR ; .)
    !               reduce using rule 37 (STMT -> RETURN EXPR ; .)
    (               reduce using rule 37 (STMT -> RETURN EXPR ; .)
    {               reduce using rule 37 (STMT -> RETURN EXPR ; .)
    INT             reduce using rule 37 (STMT -> RETURN EXPR ; .)
    BOOLEAN         reduce using rule 37 (STMT -> RETURN EXPR ; .)
    STRING          reduce using rule 37 (STMT -> RETURN EXPR ; .)
    NUMERO          reduce using rule 37 (STMT -> RETURN EXPR ; .)
    STRINGID        reduce using rule 37 (STMT -> RETURN EXPR ; .)
    TRUE            reduce using rule 37 (STMT -> RETURN EXPR ; .)
    FALSE           reduce using rule 37 (STMT -> RETURN EXPR ; .)
    NULL            reduce using rule 37 (STMT -> RETURN EXPR ; .)
    }               reduce using rule 37 (STMT -> RETURN EXPR ; .)
    ELSE            reduce using rule 37 (STMT -> RETURN EXPR ; .)


state 133

    (74) EXPR -> ( EXPR ) .

    ;               reduce using rule 74 (EXPR -> ( EXPR ) .)
    .               reduce using rule 74 (EXPR -> ( EXPR ) .)
    +               reduce using rule 74 (EXPR -> ( EXPR ) .)
    -               reduce using rule 74 (EXPR -> ( EXPR ) .)
    *               reduce using rule 74 (EXPR -> ( EXPR ) .)
    /               reduce using rule 74 (EXPR -> ( EXPR ) .)
    %               reduce using rule 74 (EXPR -> ( EXPR ) .)
    AND             reduce using rule 74 (EXPR -> ( EXPR ) .)
    OR              reduce using rule 74 (EXPR -> ( EXPR ) .)
    <               reduce using rule 74 (EXPR -> ( EXPR ) .)
    MENOROIGUAL     reduce using rule 74 (EXPR -> ( EXPR ) .)
    >               reduce using rule 74 (EXPR -> ( EXPR ) .)
    MAYOROIGUAL     reduce using rule 74 (EXPR -> ( EXPR ) .)
    IGUAL           reduce using rule 74 (EXPR -> ( EXPR ) .)
    DIFERENTE       reduce using rule 74 (EXPR -> ( EXPR ) .)
    [               reduce using rule 74 (EXPR -> ( EXPR ) .)
    )               reduce using rule 74 (EXPR -> ( EXPR ) .)
    ,               reduce using rule 74 (EXPR -> ( EXPR ) .)
    ]               reduce using rule 74 (EXPR -> ( EXPR ) .)


state 134

    (35) STMT -> LOCATION = EXPR . ;
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               shift and go to state 167
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 135

    (33) STMT -> ID ( EXPRESIONCOMA . ) ;
    (50) EXPR -> ID ( EXPRESIONCOMA . )

    )               shift and go to state 168


state 136

    (34) STMT -> ID ( ) . ;
    (51) EXPR -> ID ( ) .

    ;               shift and go to state 169
    .               reduce using rule 51 (EXPR -> ID ( ) .)
    +               reduce using rule 51 (EXPR -> ID ( ) .)
    -               reduce using rule 51 (EXPR -> ID ( ) .)
    *               reduce using rule 51 (EXPR -> ID ( ) .)
    /               reduce using rule 51 (EXPR -> ID ( ) .)
    %               reduce using rule 51 (EXPR -> ID ( ) .)
    AND             reduce using rule 51 (EXPR -> ID ( ) .)
    OR              reduce using rule 51 (EXPR -> ID ( ) .)
    <               reduce using rule 51 (EXPR -> ID ( ) .)
    MENOROIGUAL     reduce using rule 51 (EXPR -> ID ( ) .)
    >               reduce using rule 51 (EXPR -> ID ( ) .)
    MAYOROIGUAL     reduce using rule 51 (EXPR -> ID ( ) .)
    IGUAL           reduce using rule 51 (EXPR -> ID ( ) .)
    DIFERENTE       reduce using rule 51 (EXPR -> ID ( ) .)
    [               reduce using rule 51 (EXPR -> ID ( ) .)


state 137

    (75) EXPRESIONCOMA -> EXPR . EXPRESIONCOMAP
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]
    (76) EXPRESIONCOMAP -> . , EXPR EXPRESIONCOMAP
    (77) EXPRESIONCOMAP -> . empty
    (86) empty -> .

    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120
    ,               shift and go to state 171
    )               reduce using rule 86 (empty -> .)

    EXPRESIONCOMAP                 shift and go to state 170
    empty                          shift and go to state 172

state 138

    (57) EXPR -> ID . LENGTH .

    ;               reduce using rule 57 (EXPR -> ID . LENGTH .)
    .               reduce using rule 57 (EXPR -> ID . LENGTH .)
    +               reduce using rule 57 (EXPR -> ID . LENGTH .)
    -               reduce using rule 57 (EXPR -> ID . LENGTH .)
    *               reduce using rule 57 (EXPR -> ID . LENGTH .)
    /               reduce using rule 57 (EXPR -> ID . LENGTH .)
    %               reduce using rule 57 (EXPR -> ID . LENGTH .)
    AND             reduce using rule 57 (EXPR -> ID . LENGTH .)
    OR              reduce using rule 57 (EXPR -> ID . LENGTH .)
    <               reduce using rule 57 (EXPR -> ID . LENGTH .)
    MENOROIGUAL     reduce using rule 57 (EXPR -> ID . LENGTH .)
    >               reduce using rule 57 (EXPR -> ID . LENGTH .)
    MAYOROIGUAL     reduce using rule 57 (EXPR -> ID . LENGTH .)
    IGUAL           reduce using rule 57 (EXPR -> ID . LENGTH .)
    DIFERENTE       reduce using rule 57 (EXPR -> ID . LENGTH .)
    [               reduce using rule 57 (EXPR -> ID . LENGTH .)
    )               reduce using rule 57 (EXPR -> ID . LENGTH .)
    ,               reduce using rule 57 (EXPR -> ID . LENGTH .)
    ]               reduce using rule 57 (EXPR -> ID . LENGTH .)


state 139

    (29) STMT -> ID . ID . ( EXPRESIONCOMA ) ;
    (30) STMT -> ID . ID . ( ) ;
    (46) EXPR -> ID . ID . ( EXPRESIONCOMA )
    (47) EXPR -> ID . ID . ( )

    (               shift and go to state 173


state 140

    (38) STMT -> IF ( EXPR . ) STMT ELSE STMT
    (39) STMT -> IF ( EXPR . ) STMT
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    )               shift and go to state 174
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 141

    (69) EXPR -> EXPR IGUAL EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    AND             reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    OR              reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    IGUAL           reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    DIFERENTE       reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    )               reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    ,               reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    ]               reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    [               shift and go to state 120

  ! .               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! +               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! -               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! *               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! /               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! %               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! <               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! MENOROIGUAL     [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! >               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! MAYOROIGUAL     [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! [               [ reduce using rule 69 (EXPR -> EXPR IGUAL EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 142

    (70) EXPR -> EXPR DIFERENTE EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    AND             reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    OR              reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    IGUAL           reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    DIFERENTE       reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    )               reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    ,               reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    ]               reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    [               shift and go to state 120

  ! .               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! +               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! -               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! *               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! /               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! %               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! <               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! MENOROIGUAL     [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! >               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! MAYOROIGUAL     [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! [               [ reduce using rule 70 (EXPR -> EXPR DIFERENTE EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 143

    (62) EXPR -> EXPR % EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    +               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    -               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    *               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    /               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    %               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    AND             reduce using rule 62 (EXPR -> EXPR % EXPR .)
    OR              reduce using rule 62 (EXPR -> EXPR % EXPR .)
    <               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    MENOROIGUAL     reduce using rule 62 (EXPR -> EXPR % EXPR .)
    >               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    MAYOROIGUAL     reduce using rule 62 (EXPR -> EXPR % EXPR .)
    IGUAL           reduce using rule 62 (EXPR -> EXPR % EXPR .)
    DIFERENTE       reduce using rule 62 (EXPR -> EXPR % EXPR .)
    )               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    ,               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    ]               reduce using rule 62 (EXPR -> EXPR % EXPR .)
    .               shift and go to state 131
    [               shift and go to state 120

  ! .               [ reduce using rule 62 (EXPR -> EXPR % EXPR .) ]
  ! [               [ reduce using rule 62 (EXPR -> EXPR % EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! *               [ shift and go to state 113 ]
  ! /               [ shift and go to state 115 ]
  ! %               [ shift and go to state 111 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 144

    (58) EXPR -> EXPR + EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    +               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    -               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    AND             reduce using rule 58 (EXPR -> EXPR + EXPR .)
    OR              reduce using rule 58 (EXPR -> EXPR + EXPR .)
    <               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    MENOROIGUAL     reduce using rule 58 (EXPR -> EXPR + EXPR .)
    >               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    MAYOROIGUAL     reduce using rule 58 (EXPR -> EXPR + EXPR .)
    IGUAL           reduce using rule 58 (EXPR -> EXPR + EXPR .)
    DIFERENTE       reduce using rule 58 (EXPR -> EXPR + EXPR .)
    )               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    ,               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    ]               reduce using rule 58 (EXPR -> EXPR + EXPR .)
    .               shift and go to state 131
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 58 (EXPR -> EXPR + EXPR .) ]
  ! *               [ reduce using rule 58 (EXPR -> EXPR + EXPR .) ]
  ! /               [ reduce using rule 58 (EXPR -> EXPR + EXPR .) ]
  ! %               [ reduce using rule 58 (EXPR -> EXPR + EXPR .) ]
  ! [               [ reduce using rule 58 (EXPR -> EXPR + EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 145

    (60) EXPR -> EXPR * EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    +               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    -               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    *               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    /               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    %               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    AND             reduce using rule 60 (EXPR -> EXPR * EXPR .)
    OR              reduce using rule 60 (EXPR -> EXPR * EXPR .)
    <               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    MENOROIGUAL     reduce using rule 60 (EXPR -> EXPR * EXPR .)
    >               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    MAYOROIGUAL     reduce using rule 60 (EXPR -> EXPR * EXPR .)
    IGUAL           reduce using rule 60 (EXPR -> EXPR * EXPR .)
    DIFERENTE       reduce using rule 60 (EXPR -> EXPR * EXPR .)
    )               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    ,               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    ]               reduce using rule 60 (EXPR -> EXPR * EXPR .)
    .               shift and go to state 131
    [               shift and go to state 120

  ! .               [ reduce using rule 60 (EXPR -> EXPR * EXPR .) ]
  ! [               [ reduce using rule 60 (EXPR -> EXPR * EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! *               [ shift and go to state 113 ]
  ! /               [ shift and go to state 115 ]
  ! %               [ shift and go to state 111 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 146

    (59) EXPR -> EXPR - EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    +               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    -               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    AND             reduce using rule 59 (EXPR -> EXPR - EXPR .)
    OR              reduce using rule 59 (EXPR -> EXPR - EXPR .)
    <               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    MENOROIGUAL     reduce using rule 59 (EXPR -> EXPR - EXPR .)
    >               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    MAYOROIGUAL     reduce using rule 59 (EXPR -> EXPR - EXPR .)
    IGUAL           reduce using rule 59 (EXPR -> EXPR - EXPR .)
    DIFERENTE       reduce using rule 59 (EXPR -> EXPR - EXPR .)
    )               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    ,               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    ]               reduce using rule 59 (EXPR -> EXPR - EXPR .)
    .               shift and go to state 131
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 59 (EXPR -> EXPR - EXPR .) ]
  ! *               [ reduce using rule 59 (EXPR -> EXPR - EXPR .) ]
  ! /               [ reduce using rule 59 (EXPR -> EXPR - EXPR .) ]
  ! %               [ reduce using rule 59 (EXPR -> EXPR - EXPR .) ]
  ! [               [ reduce using rule 59 (EXPR -> EXPR - EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 147

    (61) EXPR -> EXPR / EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    +               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    -               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    *               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    /               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    %               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    AND             reduce using rule 61 (EXPR -> EXPR / EXPR .)
    OR              reduce using rule 61 (EXPR -> EXPR / EXPR .)
    <               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    MENOROIGUAL     reduce using rule 61 (EXPR -> EXPR / EXPR .)
    >               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    MAYOROIGUAL     reduce using rule 61 (EXPR -> EXPR / EXPR .)
    IGUAL           reduce using rule 61 (EXPR -> EXPR / EXPR .)
    DIFERENTE       reduce using rule 61 (EXPR -> EXPR / EXPR .)
    )               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    ,               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    ]               reduce using rule 61 (EXPR -> EXPR / EXPR .)
    .               shift and go to state 131
    [               shift and go to state 120

  ! .               [ reduce using rule 61 (EXPR -> EXPR / EXPR .) ]
  ! [               [ reduce using rule 61 (EXPR -> EXPR / EXPR .) ]
  ! +               [ shift and go to state 112 ]
  ! -               [ shift and go to state 114 ]
  ! *               [ shift and go to state 113 ]
  ! /               [ shift and go to state 115 ]
  ! %               [ shift and go to state 111 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 148

    (56) EXPR -> EXPR . LENGTH .

    ;               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    .               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    +               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    -               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    *               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    /               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    %               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    AND             reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    OR              reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    <               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    MENOROIGUAL     reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    >               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    MAYOROIGUAL     reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    IGUAL           reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    DIFERENTE       reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    [               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    )               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    ,               reduce using rule 56 (EXPR -> EXPR . LENGTH .)
    ]               reduce using rule 56 (EXPR -> EXPR . LENGTH .)


state 149

    (31) STMT -> EXPR . ID . ( EXPRESIONCOMA ) ;
    (32) STMT -> EXPR . ID . ( ) ;
    (48) EXPR -> EXPR . ID . ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . ID . ( )
    (79) LOCATION -> EXPR . ID .

    (               shift and go to state 175
    =               reduce using rule 79 (LOCATION -> EXPR . ID .)
    .               reduce using rule 79 (LOCATION -> EXPR . ID .)
    +               reduce using rule 79 (LOCATION -> EXPR . ID .)
    -               reduce using rule 79 (LOCATION -> EXPR . ID .)
    *               reduce using rule 79 (LOCATION -> EXPR . ID .)
    /               reduce using rule 79 (LOCATION -> EXPR . ID .)
    %               reduce using rule 79 (LOCATION -> EXPR . ID .)
    AND             reduce using rule 79 (LOCATION -> EXPR . ID .)
    OR              reduce using rule 79 (LOCATION -> EXPR . ID .)
    <               reduce using rule 79 (LOCATION -> EXPR . ID .)
    MENOROIGUAL     reduce using rule 79 (LOCATION -> EXPR . ID .)
    >               reduce using rule 79 (LOCATION -> EXPR . ID .)
    MAYOROIGUAL     reduce using rule 79 (LOCATION -> EXPR . ID .)
    IGUAL           reduce using rule 79 (LOCATION -> EXPR . ID .)
    DIFERENTE       reduce using rule 79 (LOCATION -> EXPR . ID .)
    [               reduce using rule 79 (LOCATION -> EXPR . ID .)


state 150

    (65) EXPR -> EXPR < EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    AND             reduce using rule 65 (EXPR -> EXPR < EXPR .)
    OR              reduce using rule 65 (EXPR -> EXPR < EXPR .)
    <               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    MENOROIGUAL     reduce using rule 65 (EXPR -> EXPR < EXPR .)
    >               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    MAYOROIGUAL     reduce using rule 65 (EXPR -> EXPR < EXPR .)
    IGUAL           reduce using rule 65 (EXPR -> EXPR < EXPR .)
    DIFERENTE       reduce using rule 65 (EXPR -> EXPR < EXPR .)
    )               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    ,               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    ]               reduce using rule 65 (EXPR -> EXPR < EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! +               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! -               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! *               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! /               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! %               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! [               [ reduce using rule 65 (EXPR -> EXPR < EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 151

    (67) EXPR -> EXPR > EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    AND             reduce using rule 67 (EXPR -> EXPR > EXPR .)
    OR              reduce using rule 67 (EXPR -> EXPR > EXPR .)
    <               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    MENOROIGUAL     reduce using rule 67 (EXPR -> EXPR > EXPR .)
    >               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    MAYOROIGUAL     reduce using rule 67 (EXPR -> EXPR > EXPR .)
    IGUAL           reduce using rule 67 (EXPR -> EXPR > EXPR .)
    DIFERENTE       reduce using rule 67 (EXPR -> EXPR > EXPR .)
    )               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    ,               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    ]               reduce using rule 67 (EXPR -> EXPR > EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! +               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! -               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! *               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! /               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! %               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! [               [ reduce using rule 67 (EXPR -> EXPR > EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 152

    (66) EXPR -> EXPR MENOROIGUAL EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    AND             reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    OR              reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    <               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    MENOROIGUAL     reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    >               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    MAYOROIGUAL     reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    IGUAL           reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    DIFERENTE       reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    )               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    ,               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    ]               reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! +               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! -               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! *               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! /               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! %               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! [               [ reduce using rule 66 (EXPR -> EXPR MENOROIGUAL EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 153

    (80) LOCATION -> EXPR [ EXPR . ]
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ]               shift and go to state 176
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 154

    (63) EXPR -> EXPR AND EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    AND             reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    OR              reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    )               reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    ,               reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    ]               reduce using rule 63 (EXPR -> EXPR AND EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120

  ! .               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! +               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! -               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! *               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! /               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! %               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! <               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! MENOROIGUAL     [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! >               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! MAYOROIGUAL     [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! IGUAL           [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! DIFERENTE       [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! [               [ reduce using rule 63 (EXPR -> EXPR AND EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]


state 155

    (68) EXPR -> EXPR MAYOROIGUAL EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    AND             reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    OR              reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    <               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    MENOROIGUAL     reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    >               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    MAYOROIGUAL     reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    IGUAL           reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    DIFERENTE       reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    )               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    ,               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    ]               reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    [               shift and go to state 120

  ! .               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! +               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! -               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! *               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! /               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! %               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! [               [ reduce using rule 68 (EXPR -> EXPR MAYOROIGUAL EXPR .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 123 ]
  ! <               [ shift and go to state 117 ]
  ! MENOROIGUAL     [ shift and go to state 119 ]
  ! >               [ shift and go to state 118 ]
  ! MAYOROIGUAL     [ shift and go to state 122 ]
  ! IGUAL           [ shift and go to state 109 ]
  ! DIFERENTE       [ shift and go to state 110 ]


state 156

    (64) EXPR -> EXPR OR EXPR .
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               reduce using rule 64 (EXPR -> EXPR OR EXPR .)
    OR              reduce using rule 64 (EXPR -> EXPR OR EXPR .)
    )               reduce using rule 64 (EXPR -> EXPR OR EXPR .)
    ,               reduce using rule 64 (EXPR -> EXPR OR EXPR .)
    ]               reduce using rule 64 (EXPR -> EXPR OR EXPR .)
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120

  ! .               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! +               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! -               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! *               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! /               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! %               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! AND             [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! <               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! MENOROIGUAL     [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! >               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! MAYOROIGUAL     [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! IGUAL           [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! DIFERENTE       [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! [               [ reduce using rule 64 (EXPR -> EXPR OR EXPR .) ]
  ! OR              [ shift and go to state 123 ]


state 157

    (44) STMT -> TYPE ID = . EXPR ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    LITERAL                        shift and go to state 77
    EXPR                           shift and go to state 177
    LOCATION                       shift and go to state 95

state 158

    (45) STMT -> TYPE ID ; .

    ID              reduce using rule 45 (STMT -> TYPE ID ; .)
    RETURN          reduce using rule 45 (STMT -> TYPE ID ; .)
    IF              reduce using rule 45 (STMT -> TYPE ID ; .)
    WHILE           reduce using rule 45 (STMT -> TYPE ID ; .)
    BREAK           reduce using rule 45 (STMT -> TYPE ID ; .)
    CONTINUE        reduce using rule 45 (STMT -> TYPE ID ; .)
    THIS            reduce using rule 45 (STMT -> TYPE ID ; .)
    NEW             reduce using rule 45 (STMT -> TYPE ID ; .)
    -               reduce using rule 45 (STMT -> TYPE ID ; .)
    !               reduce using rule 45 (STMT -> TYPE ID ; .)
    (               reduce using rule 45 (STMT -> TYPE ID ; .)
    {               reduce using rule 45 (STMT -> TYPE ID ; .)
    INT             reduce using rule 45 (STMT -> TYPE ID ; .)
    BOOLEAN         reduce using rule 45 (STMT -> TYPE ID ; .)
    STRING          reduce using rule 45 (STMT -> TYPE ID ; .)
    NUMERO          reduce using rule 45 (STMT -> TYPE ID ; .)
    STRINGID        reduce using rule 45 (STMT -> TYPE ID ; .)
    TRUE            reduce using rule 45 (STMT -> TYPE ID ; .)
    FALSE           reduce using rule 45 (STMT -> TYPE ID ; .)
    NULL            reduce using rule 45 (STMT -> TYPE ID ; .)
    }               reduce using rule 45 (STMT -> TYPE ID ; .)
    ELSE            reduce using rule 45 (STMT -> TYPE ID ; .)


state 159

    (19) MASFORMALES -> , TYPE ID MASFORMALES .

    )               reduce using rule 19 (MASFORMALES -> , TYPE ID MASFORMALES .)


state 160

    (40) STMT -> WHILE ( EXPR ) . STMT
    (29) STMT -> . ID . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> . ID . ID ( ) ;
    (31) STMT -> . EXPR . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> . EXPR . ID ( ) ;
    (33) STMT -> . ID ( EXPRESIONCOMA ) ;
    (34) STMT -> . ID ( ) ;
    (35) STMT -> . LOCATION = EXPR ;
    (36) STMT -> . RETURN ;
    (37) STMT -> . RETURN EXPR ;
    (38) STMT -> . IF ( EXPR ) STMT ELSE STMT
    (39) STMT -> . IF ( EXPR ) STMT
    (40) STMT -> . WHILE ( EXPR ) STMT
    (41) STMT -> . BREAK ;
    (42) STMT -> . CONTINUE ;
    (43) STMT -> . BLOQUE
    (44) STMT -> . TYPE ID = EXPR ;
    (45) STMT -> . TYPE ID ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (26) BLOQUE -> . { DECLARACION }
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 79
    RETURN          shift and go to state 68
    IF              shift and go to state 81
    WHILE           shift and go to state 66
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    {               shift and go to state 56
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 86
    STMT                           shift and go to state 178
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 74
    BLOQUE                         shift and go to state 78
    TYPE                           shift and go to state 87

state 161

    (55) EXPR -> NEW TYPE [ EXPR . ]
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ]               shift and go to state 179
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 162

    (54) EXPR -> NEW ID ( ) .

    ;               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    .               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    +               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    -               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    *               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    /               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    %               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    AND             reduce using rule 54 (EXPR -> NEW ID ( ) .)
    OR              reduce using rule 54 (EXPR -> NEW ID ( ) .)
    <               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    MENOROIGUAL     reduce using rule 54 (EXPR -> NEW ID ( ) .)
    >               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    MAYOROIGUAL     reduce using rule 54 (EXPR -> NEW ID ( ) .)
    IGUAL           reduce using rule 54 (EXPR -> NEW ID ( ) .)
    DIFERENTE       reduce using rule 54 (EXPR -> NEW ID ( ) .)
    [               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    )               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    ,               reduce using rule 54 (EXPR -> NEW ID ( ) .)
    ]               reduce using rule 54 (EXPR -> NEW ID ( ) .)


state 163

    (50) EXPR -> ID ( EXPRESIONCOMA . )

    )               shift and go to state 180


state 164

    (51) EXPR -> ID ( ) .

    ;               reduce using rule 51 (EXPR -> ID ( ) .)
    .               reduce using rule 51 (EXPR -> ID ( ) .)
    +               reduce using rule 51 (EXPR -> ID ( ) .)
    -               reduce using rule 51 (EXPR -> ID ( ) .)
    *               reduce using rule 51 (EXPR -> ID ( ) .)
    /               reduce using rule 51 (EXPR -> ID ( ) .)
    %               reduce using rule 51 (EXPR -> ID ( ) .)
    AND             reduce using rule 51 (EXPR -> ID ( ) .)
    OR              reduce using rule 51 (EXPR -> ID ( ) .)
    <               reduce using rule 51 (EXPR -> ID ( ) .)
    MENOROIGUAL     reduce using rule 51 (EXPR -> ID ( ) .)
    >               reduce using rule 51 (EXPR -> ID ( ) .)
    MAYOROIGUAL     reduce using rule 51 (EXPR -> ID ( ) .)
    IGUAL           reduce using rule 51 (EXPR -> ID ( ) .)
    DIFERENTE       reduce using rule 51 (EXPR -> ID ( ) .)
    [               reduce using rule 51 (EXPR -> ID ( ) .)
    )               reduce using rule 51 (EXPR -> ID ( ) .)
    ,               reduce using rule 51 (EXPR -> ID ( ) .)
    ]               reduce using rule 51 (EXPR -> ID ( ) .)


state 165

    (46) EXPR -> ID . ID . ( EXPRESIONCOMA )
    (47) EXPR -> ID . ID . ( )

    (               shift and go to state 181


state 166

    (48) EXPR -> EXPR . ID . ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . ID . ( )
    (79) LOCATION -> EXPR . ID .

    (               shift and go to state 182
    .               reduce using rule 79 (LOCATION -> EXPR . ID .)
    +               reduce using rule 79 (LOCATION -> EXPR . ID .)
    -               reduce using rule 79 (LOCATION -> EXPR . ID .)
    *               reduce using rule 79 (LOCATION -> EXPR . ID .)
    /               reduce using rule 79 (LOCATION -> EXPR . ID .)
    %               reduce using rule 79 (LOCATION -> EXPR . ID .)
    AND             reduce using rule 79 (LOCATION -> EXPR . ID .)
    OR              reduce using rule 79 (LOCATION -> EXPR . ID .)
    <               reduce using rule 79 (LOCATION -> EXPR . ID .)
    MENOROIGUAL     reduce using rule 79 (LOCATION -> EXPR . ID .)
    >               reduce using rule 79 (LOCATION -> EXPR . ID .)
    MAYOROIGUAL     reduce using rule 79 (LOCATION -> EXPR . ID .)
    IGUAL           reduce using rule 79 (LOCATION -> EXPR . ID .)
    DIFERENTE       reduce using rule 79 (LOCATION -> EXPR . ID .)
    [               reduce using rule 79 (LOCATION -> EXPR . ID .)
    ,               reduce using rule 79 (LOCATION -> EXPR . ID .)
    )               reduce using rule 79 (LOCATION -> EXPR . ID .)
    ;               reduce using rule 79 (LOCATION -> EXPR . ID .)
    ]               reduce using rule 79 (LOCATION -> EXPR . ID .)


state 167

    (35) STMT -> LOCATION = EXPR ; .

    ID              reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    RETURN          reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    IF              reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    WHILE           reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    BREAK           reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    CONTINUE        reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    THIS            reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    NEW             reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    -               reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    !               reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    (               reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    {               reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    INT             reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    BOOLEAN         reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    STRING          reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    NUMERO          reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    STRINGID        reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    TRUE            reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    FALSE           reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    NULL            reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    }               reduce using rule 35 (STMT -> LOCATION = EXPR ; .)
    ELSE            reduce using rule 35 (STMT -> LOCATION = EXPR ; .)


state 168

    (33) STMT -> ID ( EXPRESIONCOMA ) . ;
    (50) EXPR -> ID ( EXPRESIONCOMA ) .

    ;               shift and go to state 183
    .               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)


state 169

    (34) STMT -> ID ( ) ; .

    ID              reduce using rule 34 (STMT -> ID ( ) ; .)
    RETURN          reduce using rule 34 (STMT -> ID ( ) ; .)
    IF              reduce using rule 34 (STMT -> ID ( ) ; .)
    WHILE           reduce using rule 34 (STMT -> ID ( ) ; .)
    BREAK           reduce using rule 34 (STMT -> ID ( ) ; .)
    CONTINUE        reduce using rule 34 (STMT -> ID ( ) ; .)
    THIS            reduce using rule 34 (STMT -> ID ( ) ; .)
    NEW             reduce using rule 34 (STMT -> ID ( ) ; .)
    -               reduce using rule 34 (STMT -> ID ( ) ; .)
    !               reduce using rule 34 (STMT -> ID ( ) ; .)
    (               reduce using rule 34 (STMT -> ID ( ) ; .)
    {               reduce using rule 34 (STMT -> ID ( ) ; .)
    INT             reduce using rule 34 (STMT -> ID ( ) ; .)
    BOOLEAN         reduce using rule 34 (STMT -> ID ( ) ; .)
    STRING          reduce using rule 34 (STMT -> ID ( ) ; .)
    NUMERO          reduce using rule 34 (STMT -> ID ( ) ; .)
    STRINGID        reduce using rule 34 (STMT -> ID ( ) ; .)
    TRUE            reduce using rule 34 (STMT -> ID ( ) ; .)
    FALSE           reduce using rule 34 (STMT -> ID ( ) ; .)
    NULL            reduce using rule 34 (STMT -> ID ( ) ; .)
    }               reduce using rule 34 (STMT -> ID ( ) ; .)
    ELSE            reduce using rule 34 (STMT -> ID ( ) ; .)


state 170

    (75) EXPRESIONCOMA -> EXPR EXPRESIONCOMAP .

    )               reduce using rule 75 (EXPRESIONCOMA -> EXPR EXPRESIONCOMAP .)


state 171

    (76) EXPRESIONCOMAP -> , . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 184
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 172

    (77) EXPRESIONCOMAP -> empty .

    )               reduce using rule 77 (EXPRESIONCOMAP -> empty .)


state 173

    (29) STMT -> ID . ID ( . EXPRESIONCOMA ) ;
    (30) STMT -> ID . ID ( . ) ;
    (46) EXPR -> ID . ID ( . EXPRESIONCOMA )
    (47) EXPR -> ID . ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 186
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 185
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 174

    (38) STMT -> IF ( EXPR ) . STMT ELSE STMT
    (39) STMT -> IF ( EXPR ) . STMT
    (29) STMT -> . ID . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> . ID . ID ( ) ;
    (31) STMT -> . EXPR . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> . EXPR . ID ( ) ;
    (33) STMT -> . ID ( EXPRESIONCOMA ) ;
    (34) STMT -> . ID ( ) ;
    (35) STMT -> . LOCATION = EXPR ;
    (36) STMT -> . RETURN ;
    (37) STMT -> . RETURN EXPR ;
    (38) STMT -> . IF ( EXPR ) STMT ELSE STMT
    (39) STMT -> . IF ( EXPR ) STMT
    (40) STMT -> . WHILE ( EXPR ) STMT
    (41) STMT -> . BREAK ;
    (42) STMT -> . CONTINUE ;
    (43) STMT -> . BLOQUE
    (44) STMT -> . TYPE ID = EXPR ;
    (45) STMT -> . TYPE ID ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (26) BLOQUE -> . { DECLARACION }
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 79
    RETURN          shift and go to state 68
    IF              shift and go to state 81
    WHILE           shift and go to state 66
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    {               shift and go to state 56
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 86
    STMT                           shift and go to state 187
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 74
    BLOQUE                         shift and go to state 78
    TYPE                           shift and go to state 87

state 175

    (31) STMT -> EXPR . ID ( . EXPRESIONCOMA ) ;
    (32) STMT -> EXPR . ID ( . ) ;
    (48) EXPR -> EXPR . ID ( . EXPRESIONCOMA )
    (49) EXPR -> EXPR . ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 189
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 188
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 176

    (80) LOCATION -> EXPR [ EXPR ] .

    .               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    +               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    -               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    *               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    /               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    %               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    AND             reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    OR              reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    <               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    MENOROIGUAL     reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    >               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    MAYOROIGUAL     reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    IGUAL           reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    DIFERENTE       reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    [               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    ,               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    )               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    ;               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    =               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)
    ]               reduce using rule 80 (LOCATION -> EXPR [ EXPR ] .)


state 177

    (44) STMT -> TYPE ID = EXPR . ;
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]

    ;               shift and go to state 190
    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120


state 178

    (40) STMT -> WHILE ( EXPR ) STMT .

    ID              reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    RETURN          reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    IF              reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    WHILE           reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    BREAK           reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    CONTINUE        reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    THIS            reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    NEW             reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    -               reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    !               reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    (               reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    {               reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    INT             reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    BOOLEAN         reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    STRING          reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    NUMERO          reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    STRINGID        reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    TRUE            reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    FALSE           reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    NULL            reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    }               reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)
    ELSE            reduce using rule 40 (STMT -> WHILE ( EXPR ) STMT .)


state 179

    (55) EXPR -> NEW TYPE [ EXPR ] .

    ;               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    .               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    +               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    -               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    *               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    /               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    %               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    AND             reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    OR              reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    <               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    MENOROIGUAL     reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    >               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    MAYOROIGUAL     reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    IGUAL           reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    DIFERENTE       reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    [               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    )               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    ,               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)
    ]               reduce using rule 55 (EXPR -> NEW TYPE [ EXPR ] .)


state 180

    (50) EXPR -> ID ( EXPRESIONCOMA ) .

    ;               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    .               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    )               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    ,               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)
    ]               reduce using rule 50 (EXPR -> ID ( EXPRESIONCOMA ) .)


state 181

    (46) EXPR -> ID . ID ( . EXPRESIONCOMA )
    (47) EXPR -> ID . ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 192
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 191
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 182

    (48) EXPR -> EXPR . ID ( . EXPRESIONCOMA )
    (49) EXPR -> EXPR . ID ( . )
    (75) EXPRESIONCOMA -> . EXPR EXPRESIONCOMAP
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    )               shift and go to state 194
    ID              shift and go to state 97
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPRESIONCOMA                  shift and go to state 193
    EXPR                           shift and go to state 137
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 95

state 183

    (33) STMT -> ID ( EXPRESIONCOMA ) ; .

    ID              reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    RETURN          reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    IF              reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    WHILE           reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    BREAK           reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    CONTINUE        reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    THIS            reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    NEW             reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    -               reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    !               reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    (               reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    {               reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    INT             reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    BOOLEAN         reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    STRING          reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    NUMERO          reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    STRINGID        reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    TRUE            reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    FALSE           reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    NULL            reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    }               reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)
    ELSE            reduce using rule 33 (STMT -> ID ( EXPRESIONCOMA ) ; .)


state 184

    (76) EXPRESIONCOMAP -> , EXPR . EXPRESIONCOMAP
    (48) EXPR -> EXPR . . ID ( EXPRESIONCOMA )
    (49) EXPR -> EXPR . . ID ( )
    (56) EXPR -> EXPR . . LENGTH
    (58) EXPR -> EXPR . + EXPR
    (59) EXPR -> EXPR . - EXPR
    (60) EXPR -> EXPR . * EXPR
    (61) EXPR -> EXPR . / EXPR
    (62) EXPR -> EXPR . % EXPR
    (63) EXPR -> EXPR . AND EXPR
    (64) EXPR -> EXPR . OR EXPR
    (65) EXPR -> EXPR . < EXPR
    (66) EXPR -> EXPR . MENOROIGUAL EXPR
    (67) EXPR -> EXPR . > EXPR
    (68) EXPR -> EXPR . MAYOROIGUAL EXPR
    (69) EXPR -> EXPR . IGUAL EXPR
    (70) EXPR -> EXPR . DIFERENTE EXPR
    (79) LOCATION -> EXPR . . ID
    (80) LOCATION -> EXPR . [ EXPR ]
    (76) EXPRESIONCOMAP -> . , EXPR EXPRESIONCOMAP
    (77) EXPRESIONCOMAP -> . empty
    (86) empty -> .

    .               shift and go to state 131
    +               shift and go to state 112
    -               shift and go to state 114
    *               shift and go to state 113
    /               shift and go to state 115
    %               shift and go to state 111
    AND             shift and go to state 121
    OR              shift and go to state 123
    <               shift and go to state 117
    MENOROIGUAL     shift and go to state 119
    >               shift and go to state 118
    MAYOROIGUAL     shift and go to state 122
    IGUAL           shift and go to state 109
    DIFERENTE       shift and go to state 110
    [               shift and go to state 120
    ,               shift and go to state 171
    )               reduce using rule 86 (empty -> .)

    EXPRESIONCOMAP                 shift and go to state 195
    empty                          shift and go to state 172

state 185

    (29) STMT -> ID . ID ( EXPRESIONCOMA . ) ;
    (46) EXPR -> ID . ID ( EXPRESIONCOMA . )

    )               shift and go to state 196


state 186

    (30) STMT -> ID . ID ( ) . ;
    (47) EXPR -> ID . ID ( ) .

    ;               shift and go to state 197
    .               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    +               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    -               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    *               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    /               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    %               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    AND             reduce using rule 47 (EXPR -> ID . ID ( ) .)
    OR              reduce using rule 47 (EXPR -> ID . ID ( ) .)
    <               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    MENOROIGUAL     reduce using rule 47 (EXPR -> ID . ID ( ) .)
    >               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    MAYOROIGUAL     reduce using rule 47 (EXPR -> ID . ID ( ) .)
    IGUAL           reduce using rule 47 (EXPR -> ID . ID ( ) .)
    DIFERENTE       reduce using rule 47 (EXPR -> ID . ID ( ) .)
    [               reduce using rule 47 (EXPR -> ID . ID ( ) .)


state 187

    (38) STMT -> IF ( EXPR ) STMT . ELSE STMT
    (39) STMT -> IF ( EXPR ) STMT .

    ELSE            shift and go to state 198
    ID              reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    RETURN          reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    IF              reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    WHILE           reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    BREAK           reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    CONTINUE        reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    THIS            reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    NEW             reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    -               reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    !               reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    (               reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    {               reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    INT             reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    BOOLEAN         reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    STRING          reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    NUMERO          reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    STRINGID        reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    TRUE            reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    FALSE           reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    NULL            reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)
    }               reduce using rule 39 (STMT -> IF ( EXPR ) STMT .)

  ! ELSE            [ reduce using rule 39 (STMT -> IF ( EXPR ) STMT .) ]


state 188

    (31) STMT -> EXPR . ID ( EXPRESIONCOMA . ) ;
    (48) EXPR -> EXPR . ID ( EXPRESIONCOMA . )

    )               shift and go to state 199


state 189

    (32) STMT -> EXPR . ID ( ) . ;
    (49) EXPR -> EXPR . ID ( ) .

    ;               shift and go to state 200
    .               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    +               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    -               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    *               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    /               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    %               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    AND             reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    OR              reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    <               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    MENOROIGUAL     reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    >               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    MAYOROIGUAL     reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    IGUAL           reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    DIFERENTE       reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    [               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)


state 190

    (44) STMT -> TYPE ID = EXPR ; .

    ID              reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    RETURN          reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    IF              reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    WHILE           reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    BREAK           reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    CONTINUE        reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    THIS            reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    NEW             reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    -               reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    !               reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    (               reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    {               reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    INT             reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    BOOLEAN         reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    STRING          reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    NUMERO          reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    STRINGID        reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    TRUE            reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    FALSE           reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    NULL            reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    }               reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)
    ELSE            reduce using rule 44 (STMT -> TYPE ID = EXPR ; .)


state 191

    (46) EXPR -> ID . ID ( EXPRESIONCOMA . )

    )               shift and go to state 201


state 192

    (47) EXPR -> ID . ID ( ) .

    ;               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    .               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    +               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    -               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    *               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    /               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    %               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    AND             reduce using rule 47 (EXPR -> ID . ID ( ) .)
    OR              reduce using rule 47 (EXPR -> ID . ID ( ) .)
    <               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    MENOROIGUAL     reduce using rule 47 (EXPR -> ID . ID ( ) .)
    >               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    MAYOROIGUAL     reduce using rule 47 (EXPR -> ID . ID ( ) .)
    IGUAL           reduce using rule 47 (EXPR -> ID . ID ( ) .)
    DIFERENTE       reduce using rule 47 (EXPR -> ID . ID ( ) .)
    [               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    )               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    ,               reduce using rule 47 (EXPR -> ID . ID ( ) .)
    ]               reduce using rule 47 (EXPR -> ID . ID ( ) .)


state 193

    (48) EXPR -> EXPR . ID ( EXPRESIONCOMA . )

    )               shift and go to state 202


state 194

    (49) EXPR -> EXPR . ID ( ) .

    ;               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    .               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    +               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    -               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    *               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    /               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    %               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    AND             reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    OR              reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    <               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    MENOROIGUAL     reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    >               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    MAYOROIGUAL     reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    IGUAL           reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    DIFERENTE       reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    [               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    )               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    ,               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)
    ]               reduce using rule 49 (EXPR -> EXPR . ID ( ) .)


state 195

    (76) EXPRESIONCOMAP -> , EXPR EXPRESIONCOMAP .

    )               reduce using rule 76 (EXPRESIONCOMAP -> , EXPR EXPRESIONCOMAP .)


state 196

    (29) STMT -> ID . ID ( EXPRESIONCOMA ) . ;
    (46) EXPR -> ID . ID ( EXPRESIONCOMA ) .

    ;               shift and go to state 203
    .               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)


state 197

    (30) STMT -> ID . ID ( ) ; .

    ID              reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    RETURN          reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    IF              reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    WHILE           reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    BREAK           reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    CONTINUE        reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    THIS            reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    NEW             reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    -               reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    !               reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    (               reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    {               reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    INT             reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    BOOLEAN         reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    STRING          reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    NUMERO          reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    STRINGID        reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    TRUE            reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    FALSE           reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    NULL            reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    }               reduce using rule 30 (STMT -> ID . ID ( ) ; .)
    ELSE            reduce using rule 30 (STMT -> ID . ID ( ) ; .)


state 198

    (38) STMT -> IF ( EXPR ) STMT ELSE . STMT
    (29) STMT -> . ID . ID ( EXPRESIONCOMA ) ;
    (30) STMT -> . ID . ID ( ) ;
    (31) STMT -> . EXPR . ID ( EXPRESIONCOMA ) ;
    (32) STMT -> . EXPR . ID ( ) ;
    (33) STMT -> . ID ( EXPRESIONCOMA ) ;
    (34) STMT -> . ID ( ) ;
    (35) STMT -> . LOCATION = EXPR ;
    (36) STMT -> . RETURN ;
    (37) STMT -> . RETURN EXPR ;
    (38) STMT -> . IF ( EXPR ) STMT ELSE STMT
    (39) STMT -> . IF ( EXPR ) STMT
    (40) STMT -> . WHILE ( EXPR ) STMT
    (41) STMT -> . BREAK ;
    (42) STMT -> . CONTINUE ;
    (43) STMT -> . BLOQUE
    (44) STMT -> . TYPE ID = EXPR ;
    (45) STMT -> . TYPE ID ;
    (46) EXPR -> . ID . ID ( EXPRESIONCOMA )
    (47) EXPR -> . ID . ID ( )
    (48) EXPR -> . EXPR . ID ( EXPRESIONCOMA )
    (49) EXPR -> . EXPR . ID ( )
    (50) EXPR -> . ID ( EXPRESIONCOMA )
    (51) EXPR -> . ID ( )
    (52) EXPR -> . LOCATION
    (53) EXPR -> . THIS
    (54) EXPR -> . NEW ID ( )
    (55) EXPR -> . NEW TYPE [ EXPR ]
    (56) EXPR -> . EXPR . LENGTH
    (57) EXPR -> . ID . LENGTH
    (58) EXPR -> . EXPR + EXPR
    (59) EXPR -> . EXPR - EXPR
    (60) EXPR -> . EXPR * EXPR
    (61) EXPR -> . EXPR / EXPR
    (62) EXPR -> . EXPR % EXPR
    (63) EXPR -> . EXPR AND EXPR
    (64) EXPR -> . EXPR OR EXPR
    (65) EXPR -> . EXPR < EXPR
    (66) EXPR -> . EXPR MENOROIGUAL EXPR
    (67) EXPR -> . EXPR > EXPR
    (68) EXPR -> . EXPR MAYOROIGUAL EXPR
    (69) EXPR -> . EXPR IGUAL EXPR
    (70) EXPR -> . EXPR DIFERENTE EXPR
    (71) EXPR -> . - EXPR
    (72) EXPR -> . ! EXPR
    (73) EXPR -> . LITERAL
    (74) EXPR -> . ( EXPR )
    (78) LOCATION -> . ID
    (79) LOCATION -> . EXPR . ID
    (80) LOCATION -> . EXPR [ EXPR ]
    (26) BLOQUE -> . { DECLARACION }
    (21) TYPE -> . INT
    (22) TYPE -> . BOOLEAN
    (23) TYPE -> . STRING
    (24) TYPE -> . ID
    (25) TYPE -> . TYPE BRACKETS
    (81) LITERAL -> . NUMERO
    (82) LITERAL -> . STRINGID
    (83) LITERAL -> . TRUE
    (84) LITERAL -> . FALSE
    (85) LITERAL -> . NULL

    ID              shift and go to state 79
    RETURN          shift and go to state 68
    IF              shift and go to state 81
    WHILE           shift and go to state 66
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    THIS            shift and go to state 83
    NEW             shift and go to state 67
    -               shift and go to state 73
    !               shift and go to state 70
    (               shift and go to state 72
    {               shift and go to state 56
    INT             shift and go to state 22
    BOOLEAN         shift and go to state 21
    STRING          shift and go to state 13
    NUMERO          shift and go to state 76
    STRINGID        shift and go to state 64
    TRUE            shift and go to state 69
    FALSE           shift and go to state 82
    NULL            shift and go to state 71

    EXPR                           shift and go to state 86
    STMT                           shift and go to state 204
    LITERAL                        shift and go to state 77
    LOCATION                       shift and go to state 74
    BLOQUE                         shift and go to state 78
    TYPE                           shift and go to state 87

state 199

    (31) STMT -> EXPR . ID ( EXPRESIONCOMA ) . ;
    (48) EXPR -> EXPR . ID ( EXPRESIONCOMA ) .

    ;               shift and go to state 205
    .               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)


state 200

    (32) STMT -> EXPR . ID ( ) ; .

    ID              reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    RETURN          reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    IF              reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    WHILE           reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    BREAK           reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    CONTINUE        reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    THIS            reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    NEW             reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    -               reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    !               reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    (               reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    {               reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    INT             reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    BOOLEAN         reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    STRING          reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    NUMERO          reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    STRINGID        reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    TRUE            reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    FALSE           reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    NULL            reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    }               reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)
    ELSE            reduce using rule 32 (STMT -> EXPR . ID ( ) ; .)


state 201

    (46) EXPR -> ID . ID ( EXPRESIONCOMA ) .

    ;               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    .               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    )               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    ,               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)
    ]               reduce using rule 46 (EXPR -> ID . ID ( EXPRESIONCOMA ) .)


state 202

    (48) EXPR -> EXPR . ID ( EXPRESIONCOMA ) .

    ;               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    .               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    +               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    -               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    *               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    /               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    %               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    AND             reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    OR              reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    <               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    MENOROIGUAL     reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    >               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    MAYOROIGUAL     reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    IGUAL           reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    DIFERENTE       reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    [               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    )               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    ,               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)
    ]               reduce using rule 48 (EXPR -> EXPR . ID ( EXPRESIONCOMA ) .)


state 203

    (29) STMT -> ID . ID ( EXPRESIONCOMA ) ; .

    ID              reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    RETURN          reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    IF              reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    WHILE           reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    BREAK           reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    CONTINUE        reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    THIS            reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    NEW             reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    -               reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    !               reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    (               reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    {               reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    INT             reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    BOOLEAN         reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    STRING          reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    NUMERO          reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    STRINGID        reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    TRUE            reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    FALSE           reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    NULL            reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    }               reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)
    ELSE            reduce using rule 29 (STMT -> ID . ID ( EXPRESIONCOMA ) ; .)


state 204

    (38) STMT -> IF ( EXPR ) STMT ELSE STMT .

    ID              reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    RETURN          reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    IF              reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    WHILE           reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    BREAK           reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    CONTINUE        reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    THIS            reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    NEW             reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    -               reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    !               reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    (               reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    {               reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    INT             reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    BOOLEAN         reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    STRING          reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    NUMERO          reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    STRINGID        reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    TRUE            reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    FALSE           reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    NULL            reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    }               reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)
    ELSE            reduce using rule 38 (STMT -> IF ( EXPR ) STMT ELSE STMT .)


state 205

    (31) STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .

    ID              reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    RETURN          reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    IF              reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    WHILE           reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    BREAK           reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    CONTINUE        reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    THIS            reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    NEW             reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    -               reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    !               reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    (               reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    {               reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    INT             reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    BOOLEAN         reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    STRING          reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    NUMERO          reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    STRINGID        reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    TRUE            reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    FALSE           reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    NULL            reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    }               reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)
    ELSE            reduce using rule 31 (STMT -> EXPR . ID ( EXPRESIONCOMA ) ; .)

