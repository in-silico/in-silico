
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.0'

_lr_method = 'LALR'

_lr_signature = -1424066564
    
_lr_action_items = {'BRACKETS':([18,98,13,42,99,20,26,77,16,76,30,64,17,],[-23,-24,-22,26,26,-21,-25,26,-24,-24,26,26,26,]),'STRINGID':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,65,65,65,65,65,65,65,-36,65,65,-39,-32,65,65,65,65,65,65,65,65,65,65,65,65,-42,65,65,65,65,-29,65,65,-38,-34,65,-33,-31,-41,65,-37,-45,-26,65,65,65,65,-30,65,65,-35,-44,]),'(':([74,181,69,98,108,110,114,176,163,119,27,173,111,125,164,101,190,198,179,171,162,25,200,116,117,68,96,81,67,123,127,118,97,180,100,107,138,133,203,121,112,205,168,140,184,204,38,122,113,159,141,106,39,76,87,115,80,86,59,196,120,177,144,94,167,187,],[-43,-40,96,132,68,68,68,68,180,68,36,68,68,-36,68,68,-39,-32,68,68,179,33,68,68,68,68,68,68,68,68,68,68,-42,68,68,68,173,68,-29,68,68,-38,-34,68,-33,-31,47,-41,68,-37,-45,-26,48,101,68,68,68,123,68,-30,68,68,176,127,-35,-44,]),'BOOLEAN':([74,89,181,33,48,47,19,90,125,164,36,190,198,22,200,61,67,97,10,203,44,205,168,184,204,32,122,21,72,159,141,106,58,60,59,196,177,167,187,],[-43,-14,-40,13,13,13,13,-13,-36,13,13,-39,-32,13,13,-15,13,-42,13,-29,-10,-38,-34,-33,-31,13,-41,13,13,-37,-45,-26,13,-16,13,-30,13,-35,-44,]),'VOID':([89,19,90,22,61,10,44,32,21,106,60,],[-14,15,-13,15,-15,15,-10,15,29,-26,-16,]),'=':([73,103,76,175,144,],[100,140,-78,-80,-79,]),'WHILE':([74,181,125,164,190,198,200,67,97,203,205,168,184,204,122,159,141,106,59,196,177,167,187,],[-43,-40,-36,69,-39,-32,69,69,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,69,-30,69,-35,-44,]),'NULL':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,70,70,70,70,70,70,70,-36,70,70,-39,-32,70,70,70,70,70,70,70,70,70,70,70,70,-42,70,70,70,70,-29,70,70,-38,-34,70,-33,-31,-41,70,-37,-45,-26,70,70,70,70,-30,70,70,-35,-44,]),'/':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,112,-84,112,-83,-47,-57,-79,-85,-48,-73,112,112,-54,112,112,-46,-74,112,112,-56,112,-61,112,-50,-49,112,112,-82,112,-53,112,112,-72,-60,-78,-80,-51,-81,112,112,-51,-62,-55,112,112,112,112,112,-52,-46,-48,-49,-79,-78,]),'CLASS':([0,5,49,2,24,],[3,3,-6,3,-5,]),'CONTINUE':([74,181,125,164,190,198,200,67,97,203,205,168,184,204,122,159,141,106,59,196,177,167,187,],[-43,-40,-36,71,-39,-32,71,71,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,71,-30,71,-35,-44,]),'NEW':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,72,72,72,72,72,72,72,-36,72,72,-39,-32,72,72,72,72,72,72,72,72,72,72,72,72,-42,72,72,72,72,-29,72,72,-38,-34,72,-33,-31,-41,72,-37,-45,-26,72,72,72,72,-30,72,72,-35,-44,]),'STRING':([74,89,181,33,48,47,19,90,125,164,36,190,198,22,200,61,67,97,10,203,44,205,168,184,204,32,122,21,72,159,141,106,58,60,59,196,177,167,187,],[-43,-14,-40,18,18,18,18,-13,-36,18,18,-39,-32,18,18,-15,18,-42,18,-29,-10,-38,-34,-33,-31,18,-41,18,18,-37,-45,-26,18,-16,18,-30,18,-35,-44,]),'{':([74,181,8,62,125,164,190,198,200,67,97,203,51,205,168,184,204,122,52,159,141,106,63,59,196,177,23,167,187,],[-43,-40,10,59,-36,59,-39,-32,59,59,-42,-29,59,-38,-34,-33,-31,-41,59,-37,-45,-26,59,59,-30,59,32,-35,-44,]),'.':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,129,-84,129,-83,-47,-57,-79,-85,-48,-73,129,129,-54,129,129,-46,-74,129,129,-56,109,129,129,-50,-49,129,129,-82,129,-53,129,129,129,129,-78,-80,-51,-81,129,129,-51,129,-55,129,129,129,129,129,-52,-46,-48,-49,-79,-78,]),'MENOROIGUAL':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,110,-84,110,-83,-47,-57,-79,-85,-48,-73,110,110,-54,-59,110,-46,-74,110,-67,-56,110,-61,110,-50,-49,110,110,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,110,110,-51,-62,-55,-66,110,110,110,-68,-52,-46,-48,-49,-79,-78,]),'*':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,111,-84,111,-83,-47,-57,-79,-85,-48,-73,111,111,-54,111,111,-46,-74,111,111,-56,111,-61,111,-50,-49,111,111,-82,111,-53,111,111,-72,-60,-78,-80,-51,-81,111,111,-51,-62,-55,111,111,111,111,111,-52,-46,-48,-49,-79,-78,]),')':([178,75,131,126,91,88,33,137,191,139,176,163,70,48,47,173,83,95,36,151,101,165,150,179,136,201,130,170,41,56,192,45,142,145,148,157,127,55,193,180,158,183,194,65,154,50,79,156,169,105,189,104,161,43,147,132,175,78,155,160,153,182,146,149,186,152,93,202,57,195,94,54,],[-50,-84,164,-19,-86,-83,-86,172,-47,-57,188,-79,-85,-86,-86,185,-73,130,-86,-70,135,-54,-59,191,-86,-46,-74,-75,-18,-20,201,52,-67,-56,-61,-63,160,63,-49,193,177,-86,202,-82,-65,-86,-53,-58,-77,-71,199,-72,178,51,-60,165,-80,-81,-64,-51,-62,-55,-66,-69,197,-68,-52,-48,-17,-76,-78,62,]),'IGUAL':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,113,-84,113,-83,-47,-57,-79,-85,-48,-73,113,-70,-54,-59,113,-46,-74,113,-67,-56,113,-61,113,-50,-49,113,113,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,113,113,-51,-62,-55,-66,-69,113,113,-68,-52,-46,-48,-49,-79,-78,]),'>':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,107,-84,107,-83,-47,-57,-79,-85,-48,-73,107,107,-54,-59,107,-46,-74,107,-67,-56,107,-61,107,-50,-49,107,107,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,107,107,-51,-62,-55,-66,107,107,107,-68,-52,-46,-48,-49,-79,-78,]),'}':([74,89,181,31,12,19,90,125,190,198,22,28,40,61,67,97,10,203,44,205,168,66,184,204,32,92,122,82,159,141,106,14,60,59,196,167,187,],[-43,-14,-40,-7,-9,-86,-13,-36,-39,-32,-86,-8,49,-15,-86,-42,-86,-29,-10,-38,-34,-28,-33,-31,-86,-27,-41,106,-37,-45,-26,24,-16,-86,-30,-35,-44,]),'[':([178,73,18,185,124,75,131,98,88,191,139,163,70,13,199,83,95,151,165,150,99,136,201,130,143,20,26,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-23,-47,108,-84,108,-24,-83,-47,-57,-79,-85,-22,-48,-73,108,108,-54,108,133,108,-46,-74,108,-21,-25,108,-56,108,108,108,-50,-49,108,108,-82,108,-53,108,108,108,108,-78,-80,-51,-81,108,108,-51,108,-55,108,108,108,108,108,-52,-46,-48,-49,-79,-78,]),'EXTENDS':([8,],[11,]),'ID':([74,89,181,18,108,110,33,114,129,176,119,48,47,19,13,173,90,42,111,125,164,36,101,190,198,179,171,22,20,200,116,26,117,128,68,102,96,81,61,67,123,127,118,97,180,10,100,107,133,203,77,121,44,16,112,205,168,140,184,204,32,122,29,21,113,72,11,159,141,106,76,58,60,87,15,115,80,59,109,196,3,120,30,177,64,17,167,37,187,],[-43,-14,-40,-23,94,94,16,94,163,94,94,16,16,16,-22,94,-13,50,94,-36,76,16,94,-39,-32,94,94,16,-21,76,94,-25,94,162,94,138,94,94,-15,76,94,94,94,-42,94,16,94,94,94,-29,103,94,-10,-24,94,-38,-34,94,-33,-31,16,-41,38,16,94,98,23,-37,-45,-26,-24,16,-16,94,25,94,94,76,144,-30,8,94,39,76,91,27,-35,46,-44,]),'FALSE':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,75,75,75,75,75,75,75,-36,75,75,-39,-32,75,75,75,75,75,75,75,75,75,75,75,75,-42,75,75,75,75,-29,75,75,-38,-34,75,-33,-31,-41,75,-37,-45,-26,75,75,75,75,-30,75,75,-35,-44,]),'ELSE':([74,181,125,190,198,97,203,205,168,184,204,122,159,141,106,196,167,187,],[-43,-40,-36,200,-32,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,-30,-35,-44,]),'NUMERO':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,78,78,78,78,78,78,78,-36,78,78,-39,-32,78,78,78,78,78,78,78,78,78,78,78,78,-42,78,78,78,78,-29,78,78,-38,-34,78,-33,-31,-41,78,-37,-45,-26,78,78,78,78,-30,78,78,-35,-44,]),'THIS':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,79,79,79,79,79,79,79,-36,79,79,-39,-32,79,79,79,79,79,79,79,79,79,79,79,79,-42,79,79,79,79,-29,79,79,-38,-34,79,-33,-31,-41,79,-37,-45,-26,79,79,79,79,-30,79,79,-35,-44,]),'!':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,80,80,80,80,80,80,80,-36,80,80,-39,-32,80,80,80,80,80,80,80,80,80,80,80,80,-42,80,80,80,80,-29,80,80,-38,-34,80,-33,-31,-41,80,-37,-45,-26,80,80,80,80,-30,80,80,-35,-44,]),'-':([178,74,73,181,185,124,75,131,108,88,110,114,191,139,176,163,119,70,199,173,83,95,111,125,164,151,101,190,165,198,150,179,136,171,201,130,143,200,116,117,68,96,81,142,145,67,84,148,123,157,127,172,193,118,97,180,158,100,107,183,133,203,65,121,112,205,154,168,79,140,184,204,156,105,104,122,113,147,159,141,106,76,175,135,78,174,155,160,153,182,146,87,149,166,115,80,134,152,93,59,197,202,188,196,120,177,144,94,167,187,],[-50,-43,-52,-40,-47,114,-84,114,81,-83,81,81,-47,-57,81,-79,81,-85,-48,81,-73,114,81,-36,81,114,81,-39,-54,-32,-59,81,114,81,-46,-74,114,81,81,81,81,81,81,114,-56,81,114,-61,81,114,81,-50,-49,81,-42,81,114,81,81,114,81,-29,-82,81,81,-38,114,-34,-53,81,-33,-31,-58,-71,-72,-41,81,-60,-37,-45,-26,-78,-80,-51,-81,114,114,-51,-62,-55,114,81,114,114,81,81,114,114,-52,81,-46,-48,-49,-30,81,81,-79,-78,-35,-44,]),'DIFERENTE':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,115,-84,115,-83,-47,-57,-79,-85,-48,-73,115,-70,-54,-59,115,-46,-74,115,-67,-56,115,-61,115,-50,-49,115,115,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,115,115,-51,-62,-55,-66,-69,115,115,-68,-52,-46,-48,-49,-79,-78,]),'MAYOROIGUAL':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,116,-84,116,-83,-47,-57,-79,-85,-48,-73,116,116,-54,-59,116,-46,-74,116,-67,-56,116,-61,116,-50,-49,116,116,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,116,116,-51,-62,-55,-66,116,116,116,-68,-52,-46,-48,-49,-79,-78,]),'<':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,118,-84,118,-83,-47,-57,-79,-85,-48,-73,118,118,-54,-59,118,-46,-74,118,-67,-56,118,-61,118,-50,-49,118,118,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,118,118,-51,-62,-55,-66,118,118,118,-68,-52,-46,-48,-49,-79,-78,]),'INT':([74,89,181,33,48,47,19,90,125,164,36,190,198,22,200,61,67,97,10,203,44,205,168,184,204,32,122,21,72,159,141,106,58,60,59,196,177,167,187,],[-43,-14,-40,20,20,20,20,-13,-36,20,20,-39,-32,20,20,-15,20,-42,20,-29,-10,-38,-34,-33,-31,20,-41,20,20,-37,-45,-26,20,-16,20,-30,20,-35,-44,]),']':([178,75,88,191,139,163,70,83,151,165,150,201,130,143,142,145,148,157,193,65,154,79,156,105,104,147,175,78,155,160,153,182,146,149,166,152,93,202,94,],[-50,-84,-83,-47,-57,-79,-85,-73,-70,-54,-59,-46,-74,175,-67,-56,-61,-63,-49,-82,-65,-53,-58,-71,-72,-60,-80,-81,-64,-51,-62,-55,-66,-69,182,-68,-52,-48,-78,]),'$end':([0,6,7,5,49,2,4,1,24,9,],[-86,-1,-2,-86,-6,-86,0,-4,-5,-3,]),';':([178,185,124,75,88,191,139,163,70,27,199,83,53,151,165,150,34,201,130,46,142,145,148,157,172,193,103,65,154,79,156,105,104,147,35,85,175,135,78,174,155,160,153,182,146,87,149,134,152,93,197,202,188,94,71,],[-50,196,159,-84,-83,-47,-57,-79,-85,-86,204,-73,-11,-70,-54,-59,44,-46,-74,-86,-67,-56,-61,-63,184,-49,141,-82,-65,-53,-58,-71,-72,-60,-12,122,-80,168,-81,187,-64,-51,-62,-55,-66,125,-69,167,-68,-52,203,-48,198,-78,97,]),'LENGTH':([129,128,102,109,],[145,139,139,145,]),'IF':([74,181,125,164,190,198,200,67,97,203,205,168,184,204,122,159,141,106,59,196,177,167,187,],[-43,-40,-36,86,-39,-32,86,86,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,86,-30,86,-35,-44,]),'BREAK':([74,181,125,164,190,198,200,67,97,203,205,168,184,204,122,159,141,106,59,196,177,167,187,],[-43,-40,-36,85,-39,-32,85,85,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,85,-30,85,-35,-44,]),'%':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,117,-84,117,-83,-47,-57,-79,-85,-48,-73,117,117,-54,117,117,-46,-74,117,117,-56,117,-61,117,-50,-49,117,117,-82,117,-53,117,117,-72,-60,-78,-80,-51,-81,117,117,-51,-62,-55,117,117,117,117,117,-52,-46,-48,-49,-79,-78,]),'OR':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,119,-84,119,-83,-47,-57,-79,-85,-48,-73,119,-70,-54,-59,119,-46,-74,119,-67,-56,119,-61,-63,-50,-49,119,119,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,119,-64,-51,-62,-55,-66,-69,119,119,-68,-52,-46,-48,-49,-79,-78,]),'RETURN':([74,181,125,164,190,198,200,67,97,203,205,168,184,204,122,159,141,106,59,196,177,167,187,],[-43,-40,-36,87,-39,-32,87,87,-42,-29,-38,-34,-33,-31,-41,-37,-45,-26,87,-30,87,-35,-44,]),'+':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,120,-84,120,-83,-47,-57,-79,-85,-48,-73,120,120,-54,-59,120,-46,-74,120,120,-56,120,-61,120,-50,-49,120,120,-82,120,-53,-58,-71,-72,-60,-78,-80,-51,-81,120,120,-51,-62,-55,120,120,120,120,120,-52,-46,-48,-49,-79,-78,]),'STATIC':([89,19,90,22,61,10,44,32,106,60,],[-14,21,-13,21,-15,21,-10,21,-26,-16,]),'TRUE':([74,181,108,110,114,176,119,173,111,125,164,101,190,198,179,171,200,116,117,68,96,81,67,123,127,118,97,180,100,107,133,203,121,112,205,168,140,184,204,122,113,159,141,106,87,115,80,59,196,120,177,167,187,],[-43,-40,88,88,88,88,88,88,88,-36,88,88,-39,-32,88,88,88,88,88,88,88,88,88,88,88,88,-42,88,88,88,88,-29,88,88,-38,-34,88,-33,-31,-41,88,-37,-45,-26,88,88,88,88,-30,88,88,-35,-44,]),',':([178,75,91,88,191,139,163,70,27,83,151,165,150,136,201,130,46,142,145,148,157,193,183,65,154,50,79,156,105,104,147,175,78,155,160,153,182,146,149,152,93,202,94,],[-50,-84,58,-83,-47,-57,-79,-85,37,-73,-70,-54,-59,171,-46,-74,37,-67,-56,-61,-63,-49,171,-82,-65,58,-53,-58,-71,-72,-60,-80,-81,-64,-51,-62,-55,-66,-69,-68,-52,-48,-78,]),'AND':([178,73,185,124,75,131,88,191,139,163,70,199,83,95,151,165,150,136,201,130,143,142,145,84,148,157,172,193,158,183,65,154,79,156,105,104,147,76,175,135,78,174,155,160,153,182,146,149,166,134,152,93,197,202,188,144,94,],[-50,-52,-47,121,-84,121,-83,-47,-57,-79,-85,-48,-73,121,-70,-54,-59,121,-46,-74,121,-67,-56,121,-61,-63,-50,-49,121,121,-82,-65,-53,-58,-71,-72,-60,-78,-80,-51,-81,121,121,-51,-62,-55,-66,-69,121,121,-68,-52,-46,-48,-49,-79,-78,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CAMPOMETODO':([19,22,10,32,],[28,31,14,40,]),'CAMPOS':([27,46,],[34,53,]),'BLOQUE':([62,164,200,67,51,52,63,59,177,],[89,74,74,74,60,61,90,74,74,]),'STMT':([164,200,67,59,177,],[181,205,67,67,190,]),'TYPE':([33,48,47,19,164,36,22,200,67,10,32,21,72,58,59,177,],[42,42,42,17,77,42,17,77,77,17,17,30,99,64,77,77,]),'empty':([0,91,33,27,48,47,19,36,136,5,22,46,67,10,183,50,32,2,59,],[1,56,41,35,41,41,12,41,169,1,12,35,66,12,169,56,12,1,66,]),'CLASESIMPLE':([0,5,2,],[2,2,2,]),'LOCATION':([108,110,114,176,119,173,111,164,101,179,171,200,116,117,68,96,81,67,123,127,118,180,100,107,133,121,112,140,113,87,115,80,59,120,177,],[93,93,93,93,93,93,93,73,93,93,93,73,93,93,93,93,93,73,93,93,93,93,93,93,93,93,93,93,93,93,93,93,73,93,73,]),'FORMALES':([33,48,47,36,],[43,55,54,45,]),'PROGRAM':([0,],[4,]),'CLASEEXTENDS':([0,5,2,],[5,5,5,]),'METHOD':([19,22,10,32,],[19,19,19,19,]),'DECLARACION':([67,59,],[92,82,]),'EXPRESIONCOMAP':([136,183,],[170,195,]),'EXPRESIONCOMA':([176,173,101,179,127,180,],[189,186,137,192,161,194,]),'FIELD':([19,22,10,32,],[22,22,22,22,]),'MASFORMALES':([91,50,],[126,57,]),'LISTACLASES':([0,5,2,],[6,9,7,]),'LITERAL':([108,110,114,176,119,173,111,164,101,179,171,200,116,117,68,96,81,67,123,127,118,180,100,107,133,121,112,140,113,87,115,80,59,120,177,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'EXPR':([108,110,114,176,119,173,111,164,101,179,171,200,116,117,68,96,81,67,123,127,118,180,100,107,133,121,112,140,113,87,115,80,59,120,177,],[143,146,150,136,155,136,147,84,136,136,183,84,152,153,95,131,105,84,158,136,154,136,134,142,166,157,148,174,149,124,151,104,84,156,84,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> LISTACLASES','PROGRAM',1,'p_program','__pyclasspath__/MJ/Parser/Parser.py',208),
  ('LISTACLASES -> CLASESIMPLE LISTACLASES','LISTACLASES',2,'p_ListaClases','__pyclasspath__/MJ/Parser/Parser.py',213),
  ('LISTACLASES -> CLASEEXTENDS LISTACLASES','LISTACLASES',2,'p_ListaClases1','__pyclasspath__/MJ/Parser/Parser.py',218),
  ('LISTACLASES -> empty','LISTACLASES',1,'p_ListaClases2','__pyclasspath__/MJ/Parser/Parser.py',223),
  ('CLASESIMPLE -> CLASS ID { CAMPOMETODO }','CLASESIMPLE',5,'p_ClaseSimple','__pyclasspath__/MJ/Parser/Parser.py',227),
  ('CLASEEXTENDS -> CLASS ID EXTENDS ID { CAMPOMETODO }','CLASEEXTENDS',7,'p_ClaseExtends','__pyclasspath__/MJ/Parser/Parser.py',232),
  ('CAMPOMETODO -> FIELD CAMPOMETODO','CAMPOMETODO',2,'p_CampoMetodo','__pyclasspath__/MJ/Parser/Parser.py',237),
  ('CAMPOMETODO -> METHOD CAMPOMETODO','CAMPOMETODO',2,'p_CampoMetodo1','__pyclasspath__/MJ/Parser/Parser.py',243),
  ('CAMPOMETODO -> empty','CAMPOMETODO',1,'p_campoMetodo2','__pyclasspath__/MJ/Parser/Parser.py',248),
  ('FIELD -> TYPE ID CAMPOS ;','FIELD',4,'p_Field','__pyclasspath__/MJ/Parser/Parser.py',252),
  ('CAMPOS -> , ID CAMPOS','CAMPOS',3,'p_Campos','__pyclasspath__/MJ/Parser/Parser.py',257),
  ('CAMPOS -> empty','CAMPOS',1,'p_Campos1','__pyclasspath__/MJ/Parser/Parser.py',262),
  ('METHOD -> STATIC TYPE ID ( FORMALES ) BLOQUE','METHOD',7,'p_Method','__pyclasspath__/MJ/Parser/Parser.py',266),
  ('METHOD -> STATIC VOID ID ( FORMALES ) BLOQUE','METHOD',7,'p_Method1','__pyclasspath__/MJ/Parser/Parser.py',272),
  ('METHOD -> TYPE ID ( FORMALES ) BLOQUE','METHOD',6,'p_Method2','__pyclasspath__/MJ/Parser/Parser.py',277),
  ('METHOD -> VOID ID ( FORMALES ) BLOQUE','METHOD',6,'p_Method3','__pyclasspath__/MJ/Parser/Parser.py',282),
  ('FORMALES -> TYPE ID MASFORMALES','FORMALES',3,'p_Formales','__pyclasspath__/MJ/Parser/Parser.py',287),
  ('FORMALES -> empty','FORMALES',1,'p_Formales1','__pyclasspath__/MJ/Parser/Parser.py',292),
  ('MASFORMALES -> , TYPE ID MASFORMALES','MASFORMALES',4,'p_MasFormales','__pyclasspath__/MJ/Parser/Parser.py',296),
  ('MASFORMALES -> empty','MASFORMALES',1,'p_MasFormales1','__pyclasspath__/MJ/Parser/Parser.py',301),
  ('TYPE -> INT','TYPE',1,'p_Type','__pyclasspath__/MJ/Parser/Parser.py',305),
  ('TYPE -> BOOLEAN','TYPE',1,'p_Type1','__pyclasspath__/MJ/Parser/Parser.py',309),
  ('TYPE -> STRING','TYPE',1,'p_Type2','__pyclasspath__/MJ/Parser/Parser.py',313),
  ('TYPE -> ID','TYPE',1,'p_Type3','__pyclasspath__/MJ/Parser/Parser.py',317),
  ('TYPE -> TYPE BRACKETS','TYPE',2,'p_Type4','__pyclasspath__/MJ/Parser/Parser.py',323),
  ('BLOQUE -> { DECLARACION }','BLOQUE',3,'p_Bloque','__pyclasspath__/MJ/Parser/Parser.py',328),
  ('DECLARACION -> STMT DECLARACION','DECLARACION',2,'p_Declaracion','__pyclasspath__/MJ/Parser/Parser.py',333),
  ('DECLARACION -> empty','DECLARACION',1,'p_Declaracion1','__pyclasspath__/MJ/Parser/Parser.py',342),
  ('STMT -> ID . ID ( EXPRESIONCOMA ) ;','STMT',7,'p_Stmt','__pyclasspath__/MJ/Parser/Parser.py',348),
  ('STMT -> ID . ID ( ) ;','STMT',6,'p_Stmt1','__pyclasspath__/MJ/Parser/Parser.py',353),
  ('STMT -> EXPR . ID ( EXPRESIONCOMA ) ;','STMT',7,'p_Stmt2','__pyclasspath__/MJ/Parser/Parser.py',358),
  ('STMT -> EXPR . ID ( ) ;','STMT',6,'p_Stmt3','__pyclasspath__/MJ/Parser/Parser.py',363),
  ('STMT -> ID ( EXPRESIONCOMA ) ;','STMT',5,'p_Stmt4','__pyclasspath__/MJ/Parser/Parser.py',368),
  ('STMT -> ID ( ) ;','STMT',4,'p_Stmt5','__pyclasspath__/MJ/Parser/Parser.py',373),
  ('STMT -> LOCATION = EXPR ;','STMT',4,'p_Stmt6','__pyclasspath__/MJ/Parser/Parser.py',378),
  ('STMT -> RETURN ;','STMT',2,'p_Stmt7','__pyclasspath__/MJ/Parser/Parser.py',382),
  ('STMT -> RETURN EXPR ;','STMT',3,'p_Stmt8','__pyclasspath__/MJ/Parser/Parser.py',386),
  ('STMT -> IF ( EXPR ) STMT ELSE STMT','STMT',7,'p_Stmt9','__pyclasspath__/MJ/Parser/Parser.py',390),
  ('STMT -> IF ( EXPR ) STMT','STMT',5,'p_Stmt10','__pyclasspath__/MJ/Parser/Parser.py',394),
  ('STMT -> WHILE ( EXPR ) STMT','STMT',5,'p_Stmt11','__pyclasspath__/MJ/Parser/Parser.py',398),
  ('STMT -> BREAK ;','STMT',2,'p_Stmt12','__pyclasspath__/MJ/Parser/Parser.py',402),
  ('STMT -> CONTINUE ;','STMT',2,'p_Stmt13','__pyclasspath__/MJ/Parser/Parser.py',406),
  ('STMT -> BLOQUE','STMT',1,'p_Stmt14','__pyclasspath__/MJ/Parser/Parser.py',410),
  ('STMT -> TYPE ID = EXPR ;','STMT',5,'p_Stmt15','__pyclasspath__/MJ/Parser/Parser.py',414),
  ('STMT -> TYPE ID ;','STMT',3,'p_Stmt16','__pyclasspath__/MJ/Parser/Parser.py',418),
  ('EXPR -> ID . ID ( EXPRESIONCOMA )','EXPR',6,'p_Expr','__pyclasspath__/MJ/Parser/Parser.py',424),
  ('EXPR -> ID . ID ( )','EXPR',5,'p_Expr1','__pyclasspath__/MJ/Parser/Parser.py',428),
  ('EXPR -> EXPR . ID ( EXPRESIONCOMA )','EXPR',6,'p_Expr2','__pyclasspath__/MJ/Parser/Parser.py',432),
  ('EXPR -> EXPR . ID ( )','EXPR',5,'p_Expr3','__pyclasspath__/MJ/Parser/Parser.py',436),
  ('EXPR -> ID ( EXPRESIONCOMA )','EXPR',4,'p_Expr4','__pyclasspath__/MJ/Parser/Parser.py',440),
  ('EXPR -> ID ( )','EXPR',3,'p_Expr5','__pyclasspath__/MJ/Parser/Parser.py',444),
  ('EXPR -> LOCATION','EXPR',1,'p_Expr6','__pyclasspath__/MJ/Parser/Parser.py',448),
  ('EXPR -> THIS','EXPR',1,'p_Expr7','__pyclasspath__/MJ/Parser/Parser.py',452),
  ('EXPR -> NEW ID ( )','EXPR',4,'p_Expr8','__pyclasspath__/MJ/Parser/Parser.py',456),
  ('EXPR -> NEW TYPE [ EXPR ]','EXPR',5,'p_Expr9','__pyclasspath__/MJ/Parser/Parser.py',460),
  ('EXPR -> EXPR . LENGTH','EXPR',3,'p_Expr10','__pyclasspath__/MJ/Parser/Parser.py',464),
  ('EXPR -> ID . LENGTH','EXPR',3,'p_Expr11','__pyclasspath__/MJ/Parser/Parser.py',470),
  ('EXPR -> EXPR + EXPR','EXPR',3,'p_Expr12','__pyclasspath__/MJ/Parser/Parser.py',476),
  ('EXPR -> EXPR - EXPR','EXPR',3,'p_Expr13','__pyclasspath__/MJ/Parser/Parser.py',480),
  ('EXPR -> EXPR * EXPR','EXPR',3,'p_Expr14','__pyclasspath__/MJ/Parser/Parser.py',484),
  ('EXPR -> EXPR / EXPR','EXPR',3,'p_Expr15','__pyclasspath__/MJ/Parser/Parser.py',488),
  ('EXPR -> EXPR % EXPR','EXPR',3,'p_Expr16','__pyclasspath__/MJ/Parser/Parser.py',492),
  ('EXPR -> EXPR AND EXPR','EXPR',3,'p_Expr17','__pyclasspath__/MJ/Parser/Parser.py',496),
  ('EXPR -> EXPR OR EXPR','EXPR',3,'p_Expr18','__pyclasspath__/MJ/Parser/Parser.py',500),
  ('EXPR -> EXPR < EXPR','EXPR',3,'p_Expr19','__pyclasspath__/MJ/Parser/Parser.py',504),
  ('EXPR -> EXPR MENOROIGUAL EXPR','EXPR',3,'p_Expr20','__pyclasspath__/MJ/Parser/Parser.py',508),
  ('EXPR -> EXPR > EXPR','EXPR',3,'p_Expr21','__pyclasspath__/MJ/Parser/Parser.py',512),
  ('EXPR -> EXPR MAYOROIGUAL EXPR','EXPR',3,'p_Expr22','__pyclasspath__/MJ/Parser/Parser.py',516),
  ('EXPR -> EXPR IGUAL EXPR','EXPR',3,'p_Expr23','__pyclasspath__/MJ/Parser/Parser.py',520),
  ('EXPR -> EXPR DIFERENTE EXPR','EXPR',3,'p_Expr24','__pyclasspath__/MJ/Parser/Parser.py',524),
  ('EXPR -> - EXPR','EXPR',2,'p_Expr25','__pyclasspath__/MJ/Parser/Parser.py',528),
  ('EXPR -> ! EXPR','EXPR',2,'p_Expr26','__pyclasspath__/MJ/Parser/Parser.py',532),
  ('EXPR -> LITERAL','EXPR',1,'p_Expr27','__pyclasspath__/MJ/Parser/Parser.py',536),
  ('EXPR -> ( EXPR )','EXPR',3,'p_Expr28','__pyclasspath__/MJ/Parser/Parser.py',540),
  ('EXPRESIONCOMA -> EXPR EXPRESIONCOMAP','EXPRESIONCOMA',2,'p_ExpresionComa','__pyclasspath__/MJ/Parser/Parser.py',544),
  ('EXPRESIONCOMAP -> , EXPR EXPRESIONCOMAP','EXPRESIONCOMAP',3,'p_ExpresionComaP','__pyclasspath__/MJ/Parser/Parser.py',550),
  ('EXPRESIONCOMAP -> empty','EXPRESIONCOMAP',1,'p_ExpresionComaP1','__pyclasspath__/MJ/Parser/Parser.py',555),
  ('LOCATION -> ID','LOCATION',1,'p_Location','__pyclasspath__/MJ/Parser/Parser.py',559),
  ('LOCATION -> EXPR . ID','LOCATION',3,'p_Location1','__pyclasspath__/MJ/Parser/Parser.py',563),
  ('LOCATION -> EXPR [ EXPR ]','LOCATION',4,'p_Location2','__pyclasspath__/MJ/Parser/Parser.py',567),
  ('LITERAL -> NUMERO','LITERAL',1,'p_Literal','__pyclasspath__/MJ/Parser/Parser.py',571),
  ('LITERAL -> STRINGID','LITERAL',1,'p_Literal1','__pyclasspath__/MJ/Parser/Parser.py',575),
  ('LITERAL -> TRUE','LITERAL',1,'p_Literal2','__pyclasspath__/MJ/Parser/Parser.py',579),
  ('LITERAL -> FALSE','LITERAL',1,'p_Literal3','__pyclasspath__/MJ/Parser/Parser.py',583),
  ('LITERAL -> NULL','LITERAL',1,'p_Literal4','__pyclasspath__/MJ/Parser/Parser.py',587),
  ('empty -> <empty>','empty',0,'p_empty','__pyclasspath__/MJ/Parser/Parser.py',591),
]
